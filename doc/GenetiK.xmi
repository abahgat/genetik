<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2006-02-10T19:08:01" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.4.2</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="15287" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="16642" isRoot="false" isAbstract="false" name="typedef" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="22732" isRoot="false" isAbstract="false" name="enum" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="67006" isRoot="false" isAbstract="false" name="singleton" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="93024" isRoot="false" isAbstract="false" name="variant" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15286" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15288" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15289" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15290" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15291" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15292" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15293" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15294" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15298" isRoot="false" isAbstract="false" name="void" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15323" isRoot="false" isAbstract="false" name="Population*" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15330" isRoot="false" isAbstract="false" name="Individual*" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15392" isRoot="false" isAbstract="false" name="double*" elementReference="15291" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15710" isRoot="false" isAbstract="false" name="const Individual&amp;" elementReference="15707" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15719" isRoot="false" isAbstract="false" name="Individual**" elementReference="15707" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15725" isRoot="false" isAbstract="false" name="std::string*" elementReference="15724" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15891" isRoot="false" isAbstract="false" name="StopCriterion*" elementReference="15296" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15894" isRoot="false" isAbstract="false" name="IndividualFactory*" elementReference="15771" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15896" isRoot="false" isAbstract="false" name="SelectionMethod*" elementReference="15322" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16656" isRoot="false" isAbstract="false" name="void*" elementReference="15298" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16736" isRoot="false" isAbstract="false" name="Random*" elementReference="16733" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17070" isRoot="false" isAbstract="false" name="unsigned int*" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17081" isRoot="false" isAbstract="false" name="genetiK::Individual*" elementReference="17051" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17086" isRoot="false" isAbstract="false" name="genetiK::Individual**" elementReference="17051" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="20407" isRoot="false" isAbstract="false" name="Gene**" elementReference="20400" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="20418" isRoot="false" isAbstract="false" name="Gene*" elementReference="20400" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52208" isRoot="false" isAbstract="false" name="const std::string&amp;" elementReference="15724" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52212" isRoot="false" isAbstract="false" name="const char*" elementReference="15288" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55290" isRoot="false" isAbstract="false" name="const Log&amp;" elementReference="55287" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55294" isRoot="false" isAbstract="false" name="Log&amp;" elementReference="55287" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55296" isRoot="false" isAbstract="false" name="Log*" elementReference="55287" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55300" isRoot="false" isAbstract="false" name="ostream*" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55315" isRoot="false" isAbstract="false" name="const string&amp;" elementReference="15294" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55351" isRoot="false" isAbstract="false" name="const unsigned int" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="82249" isRoot="false" isAbstract="false" name="unsigned char" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="84337" isRoot="false" isAbstract="false" name="unsigned int" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="86166" isRoot="false" isAbstract="false" name="List&lt;Gene*>" />
    <UML:DataType stereotype="15287" isSpecification="false" isLeaf="false" visibility="public" xmi.id="93340" isRoot="false" isAbstract="false" name="GeneType*" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="89973" isRoot="false" isAbstract="false" name="GeneType" />
    <UML:Package comment="@file src/util/Random.h
@brief Random class header file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15295" isRoot="false" isAbstract="false" name="genetiK" >
     <UML:Namespace.ownedElement>
      <UML:Class comment="brief stop condition for an EvolutionaryAlgorithm
This class encapsulates a stop condition for an EvolutionaryAlgorithm. In particular, it may be extended to implement specific stop conditions.
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15296" isRoot="false" isAbstract="false" name="StopCriterion" >
       <UML:Classifier.feature>
        <UML:Operation comment="brief default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15297" isRoot="false" isAbstract="false" name="StopCriterion" />
        <UML:Operation comment="brief default destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15299" isRoot="false" isAbstract="false" name="~ StopCriterion" />
        <UML:Operation comment="brief actual stop criterion
\return true if EvolutionaryAlgorithm must stop, false otherwise" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15300" isRoot="false" isAbstract="true" name="reached" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98770" type="15289" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief iteration count stop condition for an EvolutionaryAlgorithm
This class encapsulates an iteration count stop condition for an EvolutionaryAlgorithm. It stops when a fixed number of iterations has been performed.
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15305" isRoot="false" isAbstract="false" name="StopCriterionMaxIteration" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="15306" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15310" isRoot="false" initialValue="" isAbstract="false" name="maxIteration" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15311" isRoot="false" initialValue="" isAbstract="false" name="iteration" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15312" isRoot="false" isAbstract="false" name="StopCriterionMaxIteration" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15313" isRoot="false" value="" type="15309" isAbstract="false" name="maxIteration" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief default destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15314" isRoot="false" isAbstract="false" name="~ StopCriterionMaxIteration" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15315" isRoot="false" isAbstract="false" name="reached" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98771" type="15289" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief selects an Individual from a Population
This &lt;b>abstract&lt;/b> class encapsulates a policy to select individuals from a population. It should be extended to implement specific selection methods.
\sa Individual::fitness(), RankingSelection, RouletteWheel and TournamentSelection
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15322" isRoot="false" isAbstract="false" name="SelectionMethod" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15324" isRoot="false" initialValue="" type="15323" isAbstract="false" name="population" />
        <UML:Operation comment="brief default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15325" isRoot="false" isAbstract="false" name="SelectionMethod" />
        <UML:Operation comment="brief default destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15326" isRoot="false" isAbstract="false" name="~ SelectionMethod" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15327" isRoot="false" isAbstract="false" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15328" isRoot="false" value="" type="15323" isAbstract="false" name="population" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief selects an Individual from the current Population
Subclasses override this method to implement a specific selection policy
\sa init(Population* population)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15329" isRoot="false" isAbstract="true" name="select" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98772" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief retrieves the Individual having highest fitness in the Population
\return the best Individual
\sa Individual::fitness()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15331" isRoot="false" isAbstract="true" name="getBest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98773" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief selects an Individual from a Population using &lt;i>Tournament&lt;/i> policy
This class encapsulates the &amp;quot;Tournament&amp;quot; policy to select individuals from a population.
Tournament selection chooses &lt;i>size&lt;/i> individuals from the population, with uniform probability, and then selects the best among them.
\see Individual::fitness(), SelectionMethod, RankingSelection and TournamentSelection
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15342" isRoot="false" isAbstract="false" name="TournamentSelection" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="15343" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15346" isRoot="false" initialValue="" type="15323" isAbstract="false" name="population" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15348" isRoot="false" initialValue="" isAbstract="false" name="size" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15349" isRoot="false" initialValue="" type="15330" isAbstract="false" name="best" />
        <UML:Operation comment="brief sets size as the Tournament size
\param size desired Tournament size" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15350" isRoot="false" isAbstract="false" name="TournamentSelection" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15351" isRoot="false" value="" type="15309" isAbstract="false" name="size" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief default destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15352" isRoot="false" isAbstract="false" name="~ TournamentSelection" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15353" isRoot="false" isAbstract="false" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15354" isRoot="false" value="" type="15323" isAbstract="false" name="population" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief selects an Individual from the current Population
Chooses &lt;i>size&lt;/i> individuals from the Populations and selects the best among them.
\return the selected individual
\sa init(Population* population)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15355" isRoot="false" isAbstract="false" name="select" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98774" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief retrieves the Individual having highest fitness in the Population
\return the best Individual
\sa Individual::fitness()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15356" isRoot="false" isAbstract="false" name="getBest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98775" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief selects an Individual from a Population using &lt;i>Roulette Wheel&lt;/i> policy
This class encapsulates the &amp;quot;Roulette Wheel&amp;quot; policy to select individuals from a population.
Roulette Wheel selection is defined as follows: 
each Individual &lt;i>i&lt;/i> in the Population can be selected with probability
\f[
P_i = \frac{f_i}{\sum\limits_{j=0}^{N-1}f_j}
\f]
where \f$f_j\f$ is the fitness of &lt;i>i&lt;/i>
\see Individual::fitness(), SelectionMethod, RankingSelection and TournamentSelection
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15387" isRoot="false" isAbstract="false" name="RouletteWheel" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="15388" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15391" isRoot="false" initialValue="" type="15323" isAbstract="false" name="population" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15393" isRoot="false" initialValue="" type="15392" isAbstract="false" name="fitnessRipartition" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15394" isRoot="false" initialValue="" type="15330" isAbstract="false" name="best" />
        <UML:Operation comment="brief default constructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15395" isRoot="false" isAbstract="false" name="RouletteWheel" />
        <UML:Operation comment="brief default destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15396" isRoot="false" isAbstract="false" name="~ RouletteWheel" />
        <UML:Operation comment="brief initializes the RouletteWheel selection method with a specific Population
When initializing, the Cumulative Distribution Function (CDF) associated to the probability distribution defined by the previously mentioned \f$P_i\f$ is calculated.
\param population the Population to select the Individuals from" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15397" isRoot="false" isAbstract="false" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15398" isRoot="false" value="" type="15323" isAbstract="false" name="population" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief selects an Individual from the current Population
An Individual &lt;i>i&lt;/i> will be selected with probability
\f[
P_i = \frac{f_i}{\sum\limits_{j=0}^{N-1}f_j}
\f]
\return the selected Individual
\sa init(Population* population)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15399" isRoot="false" isAbstract="false" name="select" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98776" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief retrieves the Individual having highest fitness in the Population
\return the best Individual
\sa Individual::fitness()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15400" isRoot="false" isAbstract="false" name="getBest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98777" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief Ranking Selection method
\sa Individual::fitness(), SelectionMethod, RouletteWheel and TournamentSelection
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15431" isRoot="false" isAbstract="false" name="RankingSelection" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="15432" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15435" isRoot="false" initialValue="" type="15323" isAbstract="false" name="population" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="53606" isRoot="false" initialValue="" type="15392" isAbstract="false" name="ripartition" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="53671" isRoot="false" initialValue="" isAbstract="false" name="size" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15436" isRoot="false" isAbstract="false" name="RankingSelection" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15437" isRoot="false" isAbstract="false" name="~ RankingSelection" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15438" isRoot="false" isAbstract="false" name="init" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15439" isRoot="false" value="" type="15323" isAbstract="false" name="population" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15440" isRoot="false" isAbstract="false" name="select" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98778" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15441" isRoot="false" isAbstract="false" name="getBest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98779" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="53736" isRoot="false" isAbstract="false" name="phi" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98780" type="15291" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="53737" isRoot="false" value="" type="15309" isAbstract="false" name="rank" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief Individual: generic %Individual.
Generic individual to be used with evolutionary algorithms. It is extended by ga::Individual and gp::Individual
to provide specific functions oriented towards Genetic Algorithms and Genetic Programming, respectively.
\sa IndividualFactory
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15707" isRoot="false" isAbstract="false" name="Individual" >
       <UML:Classifier.feature>
        <UML:Operation comment="brief default void constructor
Does nothing" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15708" isRoot="false" isAbstract="false" name="Individual" />
        <UML:Operation comment="brief default copy constructor
Does nothing" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15709" isRoot="false" isAbstract="false" name="Individual" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15711" isRoot="false" value="" type="15710" isAbstract="false" name="individual" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief default destructor
Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15712" isRoot="false" isAbstract="false" name="~ Individual" />
        <UML:Operation comment="brief abstract fitness function
This function must be extended by sublcasses to calculate the fitness of the individual.
\return the fitness of the current individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15713" isRoot="false" isAbstract="true" name="fitness" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98781" type="15291" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief abstract copy function
This function must be extended by sublcasses to perform copy.
\return a copy of the individual
\sa Individual(const Individual&amp; individual)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15714" isRoot="false" isAbstract="true" name="copy" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98782" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief abstract mutation
Must be overridden in subclasses to perform actual mutation.
\param mutationProbability the probability that mutation occurs
\return 0 if the operation was successful
\sa crossOver" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15715" isRoot="false" isAbstract="true" name="mutate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98783" type="15286" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15716" isRoot="false" value="" type="15291" isAbstract="false" name="mutationProbability" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief abstract crossover
Performs crossover between this and individual i, saving the resulting children in child1 and child2.
Subclasses must override this method to perform actual crossover
\param i the partner to use to perform crossover.
\param child1 first child.
\param child2 second child.
\return 0 if the operation was successful
\sa mutate(double mutationProbabilty)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15717" isRoot="false" isAbstract="true" name="crossOver" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98784" type="15286" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15718" isRoot="false" value="" type="15330" isAbstract="false" name="i" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15720" isRoot="false" value="" type="15719" isAbstract="false" name="child1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15721" isRoot="false" value="" type="15719" isAbstract="false" name="child2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief creates a string representing the individual
Subclasses must override this method to output an appropriate representation of the Individual.
\return a string representation of the individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15722" isRoot="false" isAbstract="false" name="toString" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98785" type="15724" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief IndividualFactory: generic Individual Factory.
This &lt;b>abstract&lt;/b> class is used to generate the individual to be used in a specific evolutionary algorithm.
When extending the Individual class, this class should be extended as well, to give EvolutionaryAlgorithm
to create individuals of the appropriate type.
\sa Individual
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15771" isRoot="false" isAbstract="false" name="IndividualFactory" >
       <UML:Classifier.feature>
        <UML:Operation comment="brief default void constructor
Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15772" isRoot="false" isAbstract="false" name="IndividualFactory" />
        <UML:Operation comment="brief default destructor
Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15773" isRoot="false" isAbstract="false" name="~ IndividualFactory" />
        <UML:Operation comment="brief abstract generate function
This function must be extended by sublcasses to generate appropriate individuals.
\return a new Individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15774" isRoot="false" isAbstract="true" name="generate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98786" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief Population is a collection of Individual objects
The Population class represents a single generation of Individuals in a given stage of the execution of an EvolutionaryAlgorithm
\sa Individual
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15791" isRoot="false" isAbstract="false" name="Population" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="15792" isRoot="false" initialValue="" isAbstract="false" name="size" />
        <UML:Attribute comment="array of Individua" isSpecification="false" isLeaf="false" visibility="private" xmi.id="15793" isRoot="false" initialValue="" type="15719" isAbstract="false" name="individuals" />
        <UML:Operation comment="brief creates a new Population able to hold &lt;b>size&lt;/b> Individuals" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15794" isRoot="false" isAbstract="false" name="Population" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15795" isRoot="false" value="" type="15309" isAbstract="false" name="size" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief destroys this population and the Idividual objects it contains
\sa Individual::~Individual(void);" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15796" isRoot="false" isAbstract="false" name="~ Population" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15797" isRoot="false" isAbstract="false" name="getSize" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15798" isRoot="false" isAbstract="false" name="getIndividuals" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98787" type="15719" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="brief retrieves the Individual having highest fitness in the Population
\return the best Individual
\sa Individual::fitness()" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15799" isRoot="false" isAbstract="false" name="getBest" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98788" type="15330" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="brief EvolutionaryAlgorithm: The main evolutionary algorithm.
This class represents the main evolutionary algorithm.
\ingroup genetiK" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15890" isRoot="false" isAbstract="false" name="EvolutionaryAlgorithm" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15892" isRoot="false" initialValue="" type="15891" isAbstract="false" name="stopCriterion" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15893" isRoot="false" initialValue="" type="15323" isAbstract="false" name="population" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15895" isRoot="false" initialValue="" type="15894" isAbstract="false" name="individualFactory" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15897" isRoot="false" initialValue="" type="15896" isAbstract="false" name="selectionMethod" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15898" isRoot="false" initialValue="" isAbstract="false" name="populationSize" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15899" isRoot="false" initialValue="" type="15291" isAbstract="false" name="crossOverProbabilty" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15900" isRoot="false" initialValue="" type="15291" isAbstract="false" name="mutationProbabilty" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="15901" isRoot="false" initialValue="" type="15289" isAbstract="false" name="elitism" />
        <UML:Operation comment="\param populationSize size of the population
\param factory the individual factory, redefine yours to generate your own Individual.
\param stopCriterion this class decides the end of the algortihm.
\param selectionMethod the selection method, if you don't specify it, the default RouletteWheel will be used. The genetiK library has genetiK::RouletteWheel, genetiK::TournamentSelection and RankingSelection. 
\param mutationProbability 0.01 by default.
\param crossOverProbability 0.7 by default.
\param elitism if this is true, the best individual of the current generation will be copied to the next one.
\sa Version " isSpecification="false" isLeaf="false" visibility="public" xmi.id="15902" isRoot="false" isAbstract="false" name="EvolutionaryAlgorithm" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15903" isRoot="false" value="" type="15309" isAbstract="false" name="populationSize" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15904" isRoot="false" value="" type="15894" isAbstract="false" name="factory" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15905" isRoot="false" value="" type="15891" isAbstract="false" name="stopCriterion" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15906" isRoot="false" value="" type="15896" isAbstract="false" name="selectionMethod" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15907" isRoot="false" value="" type="15291" isAbstract="false" name="mutationProbability" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15908" isRoot="false" value="" type="15291" isAbstract="false" name="crossOverProbability" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="15909" isRoot="false" value="" type="15289" isAbstract="false" name="elitism" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15910" isRoot="false" isAbstract="false" name="~ EvolutionaryAlgorithm" />
        <UML:Operation comment="Call this method to start the algorithm. 
\return return 0 if it's all ok." isSpecification="false" isLeaf="false" visibility="public" xmi.id="15911" isRoot="false" isAbstract="false" name="run" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98789" type="15286" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Usually this method is called by .run(), but if you want more control on the evolution, you can manually call this before evolve()
\return return 0 if it's all ok." isSpecification="false" isLeaf="false" visibility="public" xmi.id="15912" isRoot="false" isAbstract="false" name="generatePopulation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98790" type="15286" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Usually this method is called by .run(), but if you want more control on the evolution, you can manually call this after generatePopulation()
\return return 0 if it's all ok." isSpecification="false" isLeaf="false" visibility="public" xmi.id="15913" isRoot="false" isAbstract="false" name="evolve" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98791" type="15286" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="15914" isRoot="false" isAbstract="false" name="getPopulation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="98792" type="15323" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="16639" isRoot="false" isAbstract="false" name="util" >
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="16640" isRoot="false" isAbstract="false" name="Variant" >
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="16644" isRoot="false" initialValue="" type="96885" isAbstract="false" name="data" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="16645" isRoot="false" initialValue="" type="96801" isAbstract="false" name="type" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16646" isRoot="false" isAbstract="false" name="Variant" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16647" isRoot="false" isAbstract="false" name="Variant" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16648" isRoot="false" value="" type="15289" isAbstract="false" name="boolean" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16649" isRoot="false" isAbstract="false" name="Variant" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16650" isRoot="false" value="" type="15286" isAbstract="false" name="integer" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16651" isRoot="false" isAbstract="false" name="Variant" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16652" isRoot="false" value="" type="15288" isAbstract="false" name="character" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16653" isRoot="false" isAbstract="false" name="Variant" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16654" isRoot="false" value="" type="15291" isAbstract="false" name="real" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16655" isRoot="false" isAbstract="false" name="Variant" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16657" isRoot="false" value="" type="16656" isAbstract="false" name="userData" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16658" isRoot="false" isAbstract="false" name="~ Variant" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16659" isRoot="false" isAbstract="false" name="getType" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98793" type="16641" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16660" isRoot="false" isAbstract="false" name="getBoolean" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98794" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16661" isRoot="false" isAbstract="false" name="getInteger" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98795" type="15286" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16662" isRoot="false" isAbstract="false" name="getCharacter" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98796" type="15288" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16663" isRoot="false" isAbstract="false" name="getReal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98797" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16664" isRoot="false" isAbstract="false" name="getUserData" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98798" type="16656" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16665" isRoot="false" isAbstract="false" name="setBoolean" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16666" isRoot="false" value="" type="15289" isAbstract="false" name="boolean" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16667" isRoot="false" isAbstract="false" name="setInteger" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16668" isRoot="false" value="" type="15286" isAbstract="false" name="integer" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16669" isRoot="false" isAbstract="false" name="setCharacter" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16670" isRoot="false" value="" type="15288" isAbstract="false" name="character" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16671" isRoot="false" isAbstract="false" name="setReal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16672" isRoot="false" value="" type="15291" isAbstract="false" name="real" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16673" isRoot="false" isAbstract="false" name="setUserData" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16674" isRoot="false" value="" type="16656" isAbstract="false" name="userData" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Class stereotype="16642" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16641" isRoot="false" isAbstract="false" name="VariantType" />
          <UML:Class stereotype="16642" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16643" isRoot="false" isAbstract="false" name="Data" />
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="16733" isRoot="false" isAbstract="false" name="Random" >
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="16737" isRoot="false" initialValue="" type="16736" isAbstract="false" name="implementation" ownerScope="classifier" />
          <UML:Operation comment="brief creates the default Random implementation.
This constructor is protected because you don't need to create any instance of this class.
You can set this class as the Random imlementation by calling Random::SetDefaultImplementation();" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="16734" isRoot="false" isAbstract="false" name="Random" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="16735" isRoot="false" isAbstract="false" name="~ Random" />
          <UML:Operation comment="brief sets an implementation of the Random.
Call this function to set a new implementation of the random for the GenetiK Library.
\param random The implementation of the random" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16738" isRoot="false" isAbstract="false" name="setImplementation" ownerScope="classifier" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16739" isRoot="false" value="" type="16736" isAbstract="false" name="random" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief sets the default implementation of the Random.
Call this function to set the default implementation of the random.
This method will be automatically called by the EvolutionaryAlgorithm if no Random implementation is set." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16740" isRoot="false" isAbstract="false" name="setDefaultImplementation" ownerScope="classifier" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="16741" isRoot="false" isAbstract="false" name="getImplementation" ownerScope="classifier" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98799" type="16736" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief destroy the current implementation.
Call this method to free the memory." isSpecification="false" isLeaf="false" visibility="public" xmi.id="16742" isRoot="false" isAbstract="false" name="deleteImplementation" ownerScope="classifier" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.
This method returns the next pseudorandom integer, you can override it in your random implementation.
Returns an unsigned int greater than or equal to 0 and less than 4294967296;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16743" isRoot="false" isAbstract="false" name="getNextInt" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.
This method returns the next pseudorandom integer, you can override it in your random implementation.
Returns an unsigned int greater than or equal to 0 and less than max;

\param max The return value upperbound" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16744" isRoot="false" isAbstract="false" name="getNextInt" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="16745" isRoot="false" value="" type="15309" isAbstract="false" name="max" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Returns the next pseudorandom integer.
This method returns the next pseudorandom double, you can override this method in your random implementation.
Returns a double greater than or equal to 0.0 and less than 1.0;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="16746" isRoot="false" isAbstract="false" name="getNextReal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98800" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class comment="brief Exception is the base class of all exceptions thrown by classes in the GenetiK library
@ingroup util" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52201" isRoot="false" isAbstract="false" name="Exception" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="52203" />
          <UML:Generalization xmi.idref="52375" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="52206" isRoot="false" initialValue="" type="15724" isAbstract="false" name="message" />
          <UML:Operation comment="Creates an Exception associating it the specified string as message.
@param mess a message describing the cause of the exception" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52207" isRoot="false" isAbstract="false" name="Exception" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="52209" isRoot="false" value="" type="52208" isAbstract="false" name="mess" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="Deletes the Exception instance" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52210" isRoot="false" isAbstract="false" name="~ Exception" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="52211" isRoot="false" isAbstract="false" name="what" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98801" type="52212" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="52213" isRoot="false" isAbstract="false" name="getMessage" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98802" type="52208" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class comment="brief Signals that an objects is in an illegal state
This class is used thrown to signal that an object is in an unexpected state.
For example, it is thrown by classes that require specific prior initialization before calling certain methods.
@ingroup util" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52383" isRoot="false" isAbstract="false" name="IllegalStateException" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="52384" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Operation comment="Creates an IllegalStateException associating it the specified string as message.
@param mess a message describing the cause of the exception" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52387" isRoot="false" isAbstract="false" name="IllegalStateException" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="52388" isRoot="false" value="" type="52208" isAbstract="false" name="mess" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="Deletes the IllegalStateException instance" isSpecification="false" isLeaf="false" visibility="public" xmi.id="52389" isRoot="false" isAbstract="false" name="~ IllegalStateException" />
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class comment=" Random Number generator 'Mersenne Twister'                                *
                                                                           *
 This random number generator is described in the article by               *
 M. Matsumoto &amp; T. Nishimura, in:                                          *
 ACM Transactions on Modeling and Computer Simulation,                     *
 vol. 8, no. 1, 1998, pp. 3-30.                                            *
 Details on the initialization scheme can be found at                      *
 http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html                  *
                                                                           *
 Experts consider this an excellent random number generator.               *//*!
@brief This class is the default random implementation with the 'Mersenne Twister' algorithm.

 Random Number generator 'Mersenne Twister'                                *
                                                                           *
 This random number generator is described in the article by               *
 M. Matsumoto &amp; T. Nishimura, in:                                          *
 ACM Transactions on Modeling and Computer Simulation,                     *
 vol. 8, no. 1, 1998, pp. 3-30.                                            *
 Details on the initialization scheme can be found at                      *
 http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html                  *
                                                                           *
 Experts consider this an excellent random number generator.               *
@ingroup util" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55347" isRoot="false" isAbstract="false" name="RandomDefault" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="55348" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute comment="// constants for MT19937:" isSpecification="false" isLeaf="false" visibility="private" xmi.id="55352" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_N" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55353" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_M" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55354" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_R" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55355" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_U" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55356" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_S" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55357" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_T" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55358" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_L" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55359" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_A" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55360" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_B" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55361" isRoot="false" initialValue="" type="55351" isAbstract="false" name="MERS_C" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55362" isRoot="false" initialValue="" isAbstract="false" name="stateVector" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55364" isRoot="false" initialValue="" isAbstract="false" name="stateVectorIndex" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55366" isRoot="false" initialValue="" isAbstract="false" name="seed" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55367" isRoot="false" isAbstract="false" name="RandomDefault" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55368" isRoot="false" value="" type="15309" isAbstract="false" name="seed" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55369" isRoot="false" isAbstract="false" name="~ RandomDefault" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.

This method returns the next pseudorandom integer.
Returns an unsigned int greater than or equal to 0 and less than 4294967296;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55370" isRoot="false" isAbstract="false" name="getNextInt" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.

This method returns the next pseudorandom integer.
Returns an unsigned int greater than or equal to 0 and less than max;

@param max The return value upperbound" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55371" isRoot="false" isAbstract="false" name="getNextInt" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55372" isRoot="false" value="" type="15309" isAbstract="false" name="max" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Returns the next pseudorandom real.

This method returns the next pseudorandom double.
Returns a double greater than or equal to 0.0 and less than 1.0;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55373" isRoot="false" isAbstract="false" name="getNextReal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98803" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class comment="@brief This class represents both the interface and the container of the Random implementation used in the genetiK library .

This class represents both the interface and the container of the Random implementation used in the genetiK library.
You can redefine your own Random, extending this class and passing it to the setImplementation method.
@ingroup util" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55334" isRoot="false" isAbstract="false" name="Random" >
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55337" isRoot="false" initialValue="" type="16736" isAbstract="false" name="implementation" ownerScope="classifier" />
          <UML:Operation comment="brief creates the default Random implementation.

This constructor is protected because you don't need to create any instance of this class.
You can set this class as the Random imlementation by calling Random::SetDefaultImplementation();" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="55335" isRoot="false" isAbstract="false" name="Random" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="55336" isRoot="false" isAbstract="false" name="~ Random" />
          <UML:Operation comment="brief sets an implementation of the Random.

Call this function to set a new implementation of the random for the GenetiK Library.
@param random The implementation of the random" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55338" isRoot="false" isAbstract="false" name="setImplementation" ownerScope="classifier" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55339" isRoot="false" value="" type="16736" isAbstract="false" name="random" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief sets the default implementation of the Random.

Call this function to set the default implementation of the random.
This method will be automatically called by the EvolutionaryAlgorithm if no Random implementation is set." isSpecification="false" isLeaf="false" visibility="public" xmi.id="55340" isRoot="false" isAbstract="false" name="setDefaultImplementation" ownerScope="classifier" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55341" isRoot="false" isAbstract="false" name="getImplementation" ownerScope="classifier" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98804" type="16736" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief destroy the current implementation.

Call this method to free the memory." isSpecification="false" isLeaf="false" visibility="public" xmi.id="55342" isRoot="false" isAbstract="false" name="deleteImplementation" ownerScope="classifier" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.

This method returns the next pseudorandom integer, you can override it in your random implementation.
Returns an unsigned int greater than or equal to 0 and less than 4294967296;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55343" isRoot="false" isAbstract="true" name="getNextInt" />
          <UML:Operation comment="brief Returns the next pseudorandom integer.

This method returns the next pseudorandom integer, you can override it in your random implementation.
Returns an unsigned int greater than or equal to 0 and less than max;

@param max The return value upperbound" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55344" isRoot="false" isAbstract="true" name="getNextInt" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55345" isRoot="false" value="" type="15309" isAbstract="false" name="max" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Returns the next pseudorandom integer.

This method returns the next pseudorandom double, you can override this method in your random implementation.
Returns a double greater than or equal to 0.0 and less than 1.0;" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55346" isRoot="false" isAbstract="true" name="getNextReal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98805" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class stereotype="67006" comment="brief Provided basic logging functionalities.
This class is a sort of lightweight standalone logger. It can be used to selectively log all messages having priority greater or equal than a specified level (see ELogLevel for more details) to a specific target (file or output stream).
Default behaviour is to log messages having priority &amp;gt;= than genetiK::util::WARN to standard output.
The Log class also exposes a set of is{ELogLevel}Enabled() methods, to check if a particular log level is enabled. These methods are useful to avoid the overhead needed to generate the actual log messages when the appropriate log level is disabled.
@see ELogLevel
@ingroup util" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55287" isRoot="false" isAbstract="false" name="Log" >
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55297" isRoot="false" initialValue="" type="55296" isAbstract="false" name="self" ownerScope="classifier" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55298" isRoot="false" initialValue="" isAbstract="false" name="threshold" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="55301" isRoot="false" initialValue="" type="55300" isAbstract="false" name="target" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="55288" isRoot="false" isAbstract="false" name="Log" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="55289" isRoot="false" isAbstract="false" name="Log" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55291" isRoot="false" value="" type="55290" isAbstract="false" name="" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="55292" isRoot="false" isAbstract="false" name="operator =" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98806" type="55294" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55293" isRoot="false" value="" type="55290" isAbstract="false" name="" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="55295" isRoot="false" isAbstract="false" name="~ Log" />
          <UML:Operation comment="brief Retrieve the Log instance
As in classes that implement Singleton pattern, this method retrieves the (unique) instance of the Log class.
If the instance doesn't already exist, it is created.
@return a reference to the Log class" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55302" isRoot="false" isAbstract="false" name="getInstance" ownerScope="classifier" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98807" type="55296" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Delete the Log instance" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55303" isRoot="false" isAbstract="false" name="deleteInstance" ownerScope="classifier" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55304" isRoot="false" isAbstract="false" name="setLevel" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55305" isRoot="false" value="" type="55286" isAbstract="false" name="level" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55306" isRoot="false" isAbstract="false" name="getLevel" />
          <UML:Operation comment="brief Set the output stream to use for log messages
@return 0 if operation was succesful
@see ELogLevel" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55307" isRoot="false" isAbstract="false" name="setTarget" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98808" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55308" isRoot="false" value="" type="55300" isAbstract="false" name="targetStream" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Set the output file to use for log messages
Opens the specified file and writes log messages to it. The boolean argument permits to specify if output messages should be appended or not.
@param filename the nome of the file 
@param append true for append mode, false otherwise
@return 0 if operation was succesful" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55309" isRoot="false" isAbstract="false" name="setTarget" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98809" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55310" isRoot="false" value="" type="52212" isAbstract="false" name="filename" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55311" isRoot="false" value="" type="15289" isAbstract="false" name="append" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55312" isRoot="false" isAbstract="false" name="getTarget" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98810" type="55300" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief Demands logging of a message with the specified priority level

Messages will be logged if &lt;b>level&lt;/b> &amp;gt;= threshold.
@param level priority of the message
@param message the message to be logged
@return 1 if the message was logged, 0 otherwise
@see ELogLevel" isSpecification="false" isLeaf="false" visibility="public" xmi.id="55313" isRoot="false" isAbstract="false" name="output" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98811" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55314" isRoot="false" value="" type="55286" isAbstract="false" name="level" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55316" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55317" isRoot="false" isAbstract="false" name="debug" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98812" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55318" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55319" isRoot="false" isAbstract="false" name="info" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98813" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55320" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55321" isRoot="false" isAbstract="false" name="warn" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98814" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55322" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55323" isRoot="false" isAbstract="false" name="error" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98815" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55324" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55325" isRoot="false" isAbstract="false" name="fatal" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98816" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55326" isRoot="false" value="" type="55315" isAbstract="false" name="message" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55327" isRoot="false" isAbstract="false" name="isDebugEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98817" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55328" isRoot="false" isAbstract="false" name="isInfoEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98818" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55329" isRoot="false" isAbstract="false" name="isWarnEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98819" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55330" isRoot="false" isAbstract="false" name="isErrorEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98820" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55331" isRoot="false" isAbstract="false" name="isFatalEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98821" type="15289" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="55332" isRoot="false" isAbstract="false" name="isEnabled" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98822" type="15289" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="55333" isRoot="false" value="" type="55286" isAbstract="false" name="level" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Enumeration stereotype="22732" isSpecification="false" isLeaf="false" visibility="public" xmi.id="74314" isRoot="false" isAbstract="false" name="ELogLevel" >
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="74404" isRoot="false" isAbstract="false" name="DEBUG" />
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="74494" isRoot="false" isAbstract="false" name="INFO" />
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="74584" isRoot="false" isAbstract="false" name="WARN" />
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="74674" isRoot="false" isAbstract="false" name="ERROR" />
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="74764" isRoot="false" isAbstract="false" name="FATAL" />
        </UML:Enumeration>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="17065" isRoot="false" isAbstract="false" name="ga" >
       <UML:Namespace.ownedElement>
        <UML:Class comment="brief Individual: GA-specific %Individual.
			  This class extends the generic genetiK::Individual. It represents an individual as a
			  string of bits.
			  \ingroup ga" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17051" isRoot="false" isAbstract="false" name="Individual" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="19544" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17069" isRoot="false" initialValue="" isAbstract="false" name="length" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17071" isRoot="false" initialValue="" type="17070" isAbstract="false" name="bitArray" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="17073" isRoot="false" initialValue="" isAbstract="false" name="blockNum" />
          <UML:Operation comment="brief default void constructor
					      Does nothing" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17052" isRoot="false" isAbstract="false" name="Individual" />
          <UML:Operation comment="brief default copy constructor
					      Does nothing" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17053" isRoot="false" isAbstract="false" name="Individual" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17054" isRoot="false" value="" type="15710" isAbstract="false" name="individual" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief default destructor
					      Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17055" isRoot="false" isAbstract="false" name="~ Individual" />
          <UML:Operation comment="brief abstract fitness function
					      This function must be extended by sublcasses to calculate the fitness of the individual.
					      \return the fitness of the current individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17056" isRoot="false" isAbstract="true" name="fitness" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98823" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief abstract copy function
					      This function must be extended by sublcasses to perform copy.
					      \return a copy of the individual
					      \sa Individual(const Individual&amp; individual)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17057" isRoot="false" isAbstract="true" name="copy" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98824" type="15330" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief abstract mutation
					      Must be overridden in subclasses to perform actual mutation.
					      \param mutationProbability the probability that mutation occurs
					      \return 0 if the operation was successful
					      \sa crossOver" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17058" isRoot="false" isAbstract="true" name="mutate" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98825" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17059" isRoot="false" value="" type="15291" isAbstract="false" name="mutationProbability" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief abstract crossover
					      Performs crossover between this and individual i, saving the resulting children in child1 and child2.
					      Subclasses must override this method to perform actual crossover
					      \param i the partner to use to perform crossover.
					      \param child1 first child.
					      \param child2 second child.
					      \return 0 if the operation was successful
					      \sa mutate(double mutationProbabilty)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17060" isRoot="false" isAbstract="true" name="crossOver" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98826" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17061" isRoot="false" value="" type="15330" isAbstract="false" name="i" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17062" isRoot="false" value="" type="15719" isAbstract="false" name="child1" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17063" isRoot="false" value="" type="15719" isAbstract="false" name="child2" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief creates a string representing the individual
					      Subclasses must override this method to output an appropriate representation of the Individual.
					      \return a string representation of the individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17064" isRoot="false" isAbstract="false" name="toString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98827" type="15724" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation comment="brief creates an Individual by allocating &lt;b>length&lt;/b> bits and filling them with random data.
				       It should be called by subclasses' unsigned int constructors.
				       \todo add a constructor that allocates memory but does not initialize with random data
				       \param length specifies the length of the individual to be created
				       \sa Individual(const Individual&amp; individual)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17074" isRoot="false" isAbstract="false" name="Individual" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17075" isRoot="false" value="" type="15309" isAbstract="false" name="length" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17089" isRoot="false" isAbstract="false" name="getLength" />
          <UML:Operation comment="brief [] operator
					      Accesses a single bit of the individual bit string.
					      \param index 0-based index of the bit to retrieve
					      \return true if this[index] is 1, false otherwise" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17090" isRoot="false" isAbstract="false" name="operator [ ]" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98828" type="15289" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17091" isRoot="false" value="" type="15309" isAbstract="false" name="index" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class comment="brief IndividualFactory: GA-specific Individual Factory.
This class extends the generic genetiK::IndividualFactory to generate individuals to
be used with Genetic Algorithms.
\ingroup ga
@{" isSpecification="false" isLeaf="false" visibility="public" xmi.id="15888" isRoot="false" isAbstract="false" name="IndividualFactory" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="18304" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="17776" isRoot="false" initialValue="" isAbstract="false" name="length" />
          <UML:Operation comment="brief default void constructor
Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17770" isRoot="false" isAbstract="false" name="IndividualFactory" />
          <UML:Operation comment="brief default destructor
Does nothing (class is abstract)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17771" isRoot="false" isAbstract="false" name="~ IndividualFactory" />
          <UML:Operation comment="brief abstract generate function
This function must be extended by sublcasses to generate appropriate individuals.
\return a new Individual" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17772" isRoot="false" isAbstract="true" name="generate" />
          <UML:Operation comment="brief Creates a factory that creates Individual objects having specified length
\param length length of the individuals to generate
\sa Individual(unsigned int length)" isSpecification="false" isLeaf="false" visibility="public" xmi.id="17777" isRoot="false" isAbstract="false" name="IndividualFactory" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="17778" isRoot="false" value="" type="15309" isAbstract="false" name="length" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="17779" isRoot="false" isAbstract="false" name="getLength" />
         </UML:Classifier.feature>
        </UML:Class>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="20398" isRoot="false" isAbstract="false" name="gp" >
       <UML:Namespace.ownedElement>
        <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="20400" isRoot="false" isAbstract="false" name="Gene" >
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20402" isRoot="false" initialValue="" type="84337" isAbstract="false" name="cardinality" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20403" isRoot="false" initialValue="" type="82249" isAbstract="false" name="height" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20404" isRoot="false" initialValue="" type="82249" isAbstract="false" name="branchDepth" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20405" isRoot="false" initialValue="" type="84337" isAbstract="false" name="label" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20406" isRoot="false" initialValue="" type="82249" isAbstract="false" name="arity" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="20408" isRoot="false" initialValue="" type="20407" isAbstract="false" name="argument" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20409" isRoot="false" isAbstract="false" name="Gene" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="20410" isRoot="false" value="" type="82249" isAbstract="false" name="arity" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20411" isRoot="false" isAbstract="false" name="~ Gene" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20412" isRoot="false" isAbstract="false" name="getCardinality" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20413" isRoot="false" isAbstract="false" name="getLabel" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20414" isRoot="false" isAbstract="false" name="getHeight" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20415" isRoot="false" isAbstract="false" name="getBranchDepth" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20416" isRoot="false" isAbstract="false" name="extract" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98829" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="20417" isRoot="false" value="" type="84337" isAbstract="false" name="label" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20419" isRoot="false" isAbstract="false" name="substituteBranch" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98830" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="20420" isRoot="false" value="" type="15309" isAbstract="false" name="label" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="20421" isRoot="false" value="" type="20418" isAbstract="false" name="newSubTree" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20422" isRoot="false" isAbstract="false" name="setLabels" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="20423" isRoot="false" value="" type="15309" isAbstract="false" name="label" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20424" isRoot="false" isAbstract="false" name="copyBranch" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98831" type="20418" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20425" isRoot="false" isAbstract="true" name="copy" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98832" type="20418" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="20426" isRoot="false" isAbstract="true" name="evaluate" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98833" type="16640" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="83511" isRoot="false" isAbstract="false" name="getArgument" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98834" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="83512" isRoot="false" value="" type="82249" isAbstract="false" name="i" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="83785" isRoot="false" isAbstract="false" name="setArgument" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="83877" isRoot="false" value="" type="82249" isAbstract="false" name="i" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="83969" isRoot="false" value="" type="20418" isAbstract="false" name="newArgument" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="84152" isRoot="false" isAbstract="false" name="setHeight" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="84153" isRoot="false" value="" type="82249" isAbstract="false" name="height" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="96302" isRoot="false" isAbstract="false" name="toString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98835" type="15724" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="96385" isRoot="false" isAbstract="false" name="getArity" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98836" type="82249" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="21688" isRoot="false" isAbstract="false" name="IndividualFactory" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="22046" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="22576" isRoot="false" initialValue="" type="82249" isAbstract="false" name="maxHeight" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="23143" isRoot="false" initialValue="" type="22731" isAbstract="false" name="treeInitialization" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="24084" isRoot="false" isAbstract="false" name="~IndividualFactory" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="24136" isRoot="false" isAbstract="true" name="generate" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98837" type="15330" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="24240" isRoot="false" isAbstract="false" name="IndividualFactory" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="24241" isRoot="false" value="" type="82249" isAbstract="false" name="maxHeight" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="24294" isRoot="false" value="" type="22731" isAbstract="false" name="treeInitialization" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="26134" isRoot="false" isAbstract="true" name="generateGene" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98838" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="26400" isRoot="false" value="" type="25294" isAbstract="false" name="flags" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="26454" isRoot="false" isAbstract="false" name="generateBranch" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98839" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="26508" isRoot="false" value="" type="82249" isAbstract="false" name="height" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="26615" isRoot="false" value="" type="22731" isAbstract="false" name="treeInitialization" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="82158" isRoot="false" isAbstract="false" name="generateChildren" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="82159" isRoot="false" value="" type="20418" isAbstract="false" name="branchRoot" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="82339" isRoot="false" value="" type="82249" isAbstract="false" name="height" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="26723" isRoot="false" isAbstract="false" name="generateTree" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98840" type="20418" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="26779" isRoot="false" isAbstract="false" name="getMaxHeight" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="98160" isRoot="false" isAbstract="false" name="getTreeInitialization" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98841" type="22731" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
         <UML:Namespace.ownedElement>
          <UML:Enumeration stereotype="22732" isSpecification="false" isLeaf="false" visibility="public" xmi.id="25294" isRoot="false" isAbstract="false" name="EGenerateGeneFlags" >
           <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="25768" isRoot="false" isAbstract="false" name="TERMINAL" />
           <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="25821" isRoot="false" isAbstract="false" name="FUNCTION" />
          </UML:Enumeration>
         </UML:Namespace.ownedElement>
        </UML:Class>
        <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="22266" isRoot="false" isAbstract="false" name="Individual" >
         <UML:GeneralizableElement.generalization>
          <UML:Generalization xmi.idref="22420" />
         </UML:GeneralizableElement.generalization>
         <UML:Classifier.feature>
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="29305" isRoot="false" initialValue="" type="15894" isAbstract="false" name="individualFactory" />
          <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="29362" isRoot="false" initialValue="" type="20418" isAbstract="false" name="root" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29419" isRoot="false" isAbstract="false" name="extract" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98842" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29420" isRoot="false" value="" type="15309" isAbstract="false" name="label" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29534" isRoot="false" isAbstract="false" name="substituteBranch" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98843" type="20418" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29535" isRoot="false" value="" type="15309" isAbstract="false" name="label" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29650" isRoot="false" value="" type="20418" isAbstract="false" name="newSubTree" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="29766" isRoot="false" isAbstract="false" name="setLabels" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="97301" isRoot="false" isAbstract="false" name="getCardinality" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98844" type="84337" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="97386" isRoot="false" isAbstract="false" name="getIndividualFactory" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98845" type="15894" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="protected" xmi.id="97557" isRoot="false" isAbstract="false" name="getRoot" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98846" type="20418" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29825" isRoot="false" isAbstract="false" name="Individual" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29826" isRoot="false" value="" type="15894" isAbstract="false" name="individualFactory" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29943" isRoot="false" isAbstract="false" name="Individual" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29944" isRoot="false" value="" type="15710" isAbstract="false" name="individual" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30061" isRoot="false" isAbstract="false" name="~Individual" />
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30120" isRoot="false" isAbstract="true" name="fitness" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98847" type="15291" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30180" isRoot="false" isAbstract="true" name="copy" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98848" type="17081" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30300" isRoot="false" isAbstract="false" name="mutate" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98849" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="30301" isRoot="false" value="" type="15291" isAbstract="false" name="mutationProbability" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="30423" isRoot="false" isAbstract="false" name="crossOver" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98850" type="15286" />
            <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="30424" isRoot="false" value="" type="15330" isAbstract="false" name="i" />
            <UML:Parameter isSpecification="false" kind="out" isLeaf="false" visibility="private" xmi.id="30486" isRoot="false" value="" type="15719" isAbstract="false" name="child1" />
            <UML:Parameter isSpecification="false" kind="out" isLeaf="false" visibility="private" xmi.id="30548" isRoot="false" value="" type="15719" isAbstract="false" name="child2" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
          <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="82696" isRoot="false" isAbstract="false" name="toString" >
           <UML:BehavioralFeature.parameter>
            <UML:Parameter kind="return" xmi.id="98851" type="15724" />
           </UML:BehavioralFeature.parameter>
          </UML:Operation>
         </UML:Classifier.feature>
        </UML:Class>
        <UML:Enumeration stereotype="22732" isSpecification="false" isLeaf="false" visibility="public" xmi.id="22731" isRoot="false" isAbstract="false" name="ETreeInitialization" >
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="22886" isRoot="false" isAbstract="false" name="GROW" />
         <UML:EnumerationLiteral isSpecification="false" isLeaf="false" visibility="public" xmi.id="22938" isRoot="false" isAbstract="false" name="FULL" />
        </UML:Enumeration>
        <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="37179" isRoot="false" isAbstract="false" name="st" >
         <UML:Namespace.ownedElement>
          <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="40065" isRoot="false" isAbstract="false" name="IndividualFactory" >
           <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref="40837" />
           </UML:GeneralizableElement.generalization>
           <UML:Classifier.feature>
            <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="40066" isRoot="false" initialValue="" type="82249" isAbstract="false" name="maxHeight" />
            <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="95571" isRoot="false" initialValue="" type="89973" isAbstract="false" name="rootType" />
            <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="95652" isRoot="false" initialValue="" type="89973" isAbstract="false" name="nextGeneType" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40069" isRoot="false" isAbstract="false" name="~IndividualFactory" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40070" isRoot="false" isAbstract="true" name="generate" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40071" isRoot="false" isAbstract="false" name="IndividualFactory" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="40072" isRoot="false" value="" type="17072" isAbstract="false" name="maxHeight" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="40073" isRoot="false" value="" type="22731" isAbstract="false" name="treeInitialization" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40074" isRoot="false" isAbstract="true" name="generateGene" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="40075" isRoot="false" value="" type="25294" isAbstract="false" name="flags" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40076" isRoot="false" isAbstract="false" name="generateBranch" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="40077" isRoot="false" value="" type="17072" isAbstract="false" name="height" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="40078" isRoot="false" value="" type="22731" isAbstract="false" name="treeInitialization" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40079" isRoot="false" isAbstract="false" name="generateTree" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="40080" isRoot="false" isAbstract="false" name="getMaxHeight" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="85158" isRoot="false" isAbstract="false" name="generateChildren" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="85250" isRoot="false" value="" type="20418" isAbstract="false" name="branchRoot" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="85342" isRoot="false" value="" type="82249" isAbstract="false" name="height" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="95813" isRoot="false" isAbstract="false" name="getNextType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter kind="return" xmi.id="98852" type="89973" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="95895" isRoot="false" isAbstract="false" name="setNextType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="95977" isRoot="false" value="" type="89973" isAbstract="false" name="type" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
           </UML:Classifier.feature>
          </UML:Class>
          <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="41727" isRoot="false" isAbstract="false" name="Gene" >
           <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref="42390" />
           </UML:GeneralizableElement.generalization>
           <UML:Classifier.feature>
            <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="93260" isRoot="false" initialValue="" type="89973" isAbstract="false" name="type" />
            <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="93339" isRoot="false" initialValue="" type="93340" isAbstract="false" name="argumentType" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41734" isRoot="false" isAbstract="false" name="Gene" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="41735" isRoot="false" value="" type="17072" isAbstract="false" name="arity" />
              <UML:Parameter stereotype="93024" isSpecification="false" isLeaf="false" visibility="private" xmi.id="93025" isRoot="false" value="" type="" isAbstract="false" name="..." />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="41736" isRoot="false" isAbstract="false" name="~ Gene" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="86073" isRoot="false" isAbstract="false" name="extractListByType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter kind="return" xmi.id="98853" type="86166" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="86074" isRoot="false" value="" type="89973" isAbstract="false" name="geneType" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="86442" isRoot="false" isAbstract="false" name="getArgumentType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter kind="return" xmi.id="98854" type="89973" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="86443" isRoot="false" value="" type="84337" isAbstract="false" name="i" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="86628" isRoot="false" isAbstract="false" name="getType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter kind="return" xmi.id="98855" type="89973" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
           </UML:Classifier.feature>
          </UML:Class>
          <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="42704" isRoot="false" isAbstract="false" name="Individual" >
           <UML:GeneralizableElement.generalization>
            <UML:Generalization xmi.idref="43615" />
           </UML:GeneralizableElement.generalization>
           <UML:Classifier.feature>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42713" isRoot="false" isAbstract="false" name="Individual" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="42714" isRoot="false" value="" type="15894" isAbstract="false" name="individualFactory" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42715" isRoot="false" isAbstract="false" name="Individual" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="42716" isRoot="false" value="" type="15710" isAbstract="false" name="individual" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42717" isRoot="false" isAbstract="false" name="~Individual" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42718" isRoot="false" isAbstract="true" name="fitness" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42719" isRoot="false" isAbstract="true" name="copy" />
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42720" isRoot="false" isAbstract="false" name="mutate" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="42721" isRoot="false" value="" type="15291" isAbstract="false" name="mutationProbability" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="42722" isRoot="false" isAbstract="false" name="crossOver" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="42723" isRoot="false" value="" type="15330" isAbstract="false" name="i" />
              <UML:Parameter isSpecification="false" kind="out" isLeaf="false" visibility="private" xmi.id="42724" isRoot="false" value="" type="15719" isAbstract="false" name="child1" />
              <UML:Parameter isSpecification="false" kind="out" isLeaf="false" visibility="private" xmi.id="42725" isRoot="false" value="" type="15719" isAbstract="false" name="child2" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
            <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="85616" isRoot="false" isAbstract="false" name="extractListByType" >
             <UML:BehavioralFeature.parameter>
              <UML:Parameter kind="return" xmi.id="98856" type="86166" />
              <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="85708" isRoot="false" value="" type="89973" isAbstract="false" name="geneType" />
             </UML:BehavioralFeature.parameter>
            </UML:Operation>
           </UML:Classifier.feature>
          </UML:Class>
         </UML:Namespace.ownedElement>
        </UML:Package>
       </UML:Namespace.ownedElement>
      </UML:Package>
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="15723" isRoot="false" isAbstract="false" name="std" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="15724" isRoot="false" isAbstract="false" name="string" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="52202" isRoot="false" isAbstract="false" name="exception" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="96801" isRoot="false" isAbstract="false" name="VariantType" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="96885" isRoot="false" isAbstract="false" name="Data" />
    <UML:Generalization isSpecification="false" child="15305" visibility="public" xmi.id="15306" parent="15296" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="15342" visibility="public" xmi.id="15343" parent="15322" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="15387" visibility="public" xmi.id="15388" parent="15322" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="15431" visibility="public" xmi.id="15432" parent="15322" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="15888" visibility="public" xmi.id="18304" parent="15771" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="17051" visibility="public" xmi.id="19544" parent="15707" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="21688" visibility="public" xmi.id="22046" parent="15771" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="22266" visibility="public" xmi.id="22420" parent="15707" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" xmi.id="23297" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23298" aggregation="composite" type="21688" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23299" aggregation="none" type="21688" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="23466" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="23467" aggregation="composite" type="21688" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="protected" changeability="changeable" isNavigable="true" xmi.id="23468" aggregation="none" type="22731" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="24711" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="24712" aggregation="none" type="21688" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="24713" aggregation="none" type="22731" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="24922" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="24923" aggregation="none" type="21688" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="24924" aggregation="none" type="22731" name="" multiplicity="1" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Dependency isSpecification="false" visibility="public" xmi.id="25187" client="21688" name="" supplier="22731" />
    <UML:Dependency isSpecification="false" visibility="public" xmi.id="28796" client="15771" name="&lt;&lt; creates >>" supplier="15707" />
    <UML:Association isSpecification="false" visibility="public" xmi.id="33676" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="33677" aggregation="shared" type="22266" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="33678" aggregation="none" type="20400" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="40065" visibility="public" xmi.id="40837" parent="21688" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="41727" visibility="public" xmi.id="42390" parent="20400" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="42704" visibility="public" xmi.id="43615" parent="22266" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" xmi.id="44315" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="44316" aggregation="shared" type="41727" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="44317" aggregation="none" type="41727" name="" multiplicity="0..1" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="44446" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="44447" aggregation="shared" type="42704" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="44448" aggregation="none" type="41727" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="52201" visibility="public" xmi.id="52203" parent="52202" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="52201" visibility="public" xmi.id="52375" parent="52202" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="52383" visibility="public" xmi.id="52384" parent="52201" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="55347" visibility="public" xmi.id="55348" parent="55334" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" xmi.id="61816" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="61817" aggregation="none" type="15890" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="61818" aggregation="none" type="15322" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="62531" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="62532" aggregation="none" type="15890" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="62533" aggregation="none" type="15296" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="63246" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="63247" aggregation="none" type="15890" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="63248" aggregation="none" type="15771" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="63605" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="63606" aggregation="none" type="15890" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="63607" aggregation="none" type="15791" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="64409" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="64410" aggregation="none" type="15791" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="64411" aggregation="none" type="15707" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="64946" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="64947" aggregation="none" type="22266" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="64948" aggregation="none" type="20400" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="65127" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="65128" aggregation="none" type="42704" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="65129" aggregation="none" type="41727" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="65486" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="65487" aggregation="none" type="41727" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="protected" changeability="changeable" isNavigable="true" xmi.id="65488" aggregation="none" type="41727" name="" multiplicity="1..n" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="66472" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="66473" aggregation="none" type="20400" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="protected" changeability="changeable" isNavigable="true" xmi.id="66474" aggregation="none" type="20400" name="" multiplicity="1..n" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="78503" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="78504" aggregation="composite" type="55287" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="78505" aggregation="none" type="74314" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="78684" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="78685" aggregation="none" type="55287" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="78686" aggregation="none" type="55287" name="" />
     </UML:Association.connection>
    </UML:Association>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="15285" documentation="" uniqueid="98856" />
  <diagrams>
   <diagram snapgrid="1" showattsig="1" fillcolor="#7dff79" linewidth="0" zoom="64" showgrid="1" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="2438" snapy="10" showatts="1" xmi.id="15285" documentation="" type="402" showops="1" showpackage="1" name="class diagram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="1" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="2522" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="170" showattsigs="601" usesdiagramusefillcolour="1" x="1105" linecolour="none" y="35" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15296" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="340" showattsigs="601" usesdiagramusefillcolour="1" x="1020" linecolour="none" y="205" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15305" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="1" x="325" linecolour="none" y="15" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="130" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15322" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="325" linecolour="#ff0000" y="215" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="170" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15342" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="1" x="25" linecolour="none" y="215" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="170" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15387" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="625" linecolour="#ff0000" y="210" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="180" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15431" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="550" showattsigs="601" usesdiagramusefillcolour="0" x="835" linecolour="#ff0000" y="810" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="180" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15707" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="200" showattsigs="601" usesdiagramusefillcolour="1" x="430" linecolour="none" y="855" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15771" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="1" x="1525" linecolour="none" y="825" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="150" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15791" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="1600" showattsigs="601" usesdiagramusefillcolour="1" x="0" linecolour="none" y="455" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#ffffc0" height="270" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15890" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="250" showattsigs="601" usesdiagramusefillcolour="0" x="2015" linecolour="#ff0000" y="1860" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7dff79" height="380" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="16640" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="550" showattsigs="601" usesdiagramusefillcolour="0" x="835" linecolour="#ff0000" y="1045" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#80d3ff" height="270" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="17051" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="230" showattsigs="601" usesdiagramusefillcolour="1" x="385" linecolour="none" y="1075" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="#80d3ff" height="130" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="15888" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="440" showattsigs="601" usesdiagramusefillcolour="0" x="1480" linecolour="#ff0000" y="1410" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffa477" height="440" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="20400" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="660" showattsigs="601" usesdiagramusefillcolour="0" x="120" linecolour="#ff0000" y="1510" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffa477" height="220" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="21688" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="550" showattsigs="601" usesdiagramusefillcolour="0" x="835" linecolour="#ff0000" y="1470" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffa477" height="310" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="22266" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <enumwidget usesdiagramfillcolour="0" width="230" usesdiagramusefillcolour="0" x="405" linecolour="#ff0000" y="1360" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffa477" height="80" usefillcolor="1" isinstance="0" xmi.id="22731" showpackage="1" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     <enumwidget usesdiagramfillcolour="0" width="380" usesdiagramusefillcolour="0" x="10" linecolour="#ff0000" y="1360" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffa477" height="80" usefillcolor="1" isinstance="0" xmi.id="25294" showpackage="1" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="620" showattsigs="601" usesdiagramusefillcolour="0" x="140" linecolour="#ff0000" y="1920" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffb143" height="260" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="40065" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="440" showattsigs="601" usesdiagramusefillcolour="0" x="1480" linecolour="#ff0000" y="1935" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffb143" height="150" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="41727" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="520" showattsigs="601" usesdiagramusefillcolour="0" x="850" linecolour="#ff0000" y="1920" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffb143" height="180" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="42704" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="300" showattsigs="601" usesdiagramusefillcolour="1" x="1990" linecolour="none" y="645" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="110" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="52201" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="380" showattsigs="601" usesdiagramusefillcolour="1" x="1950" linecolour="none" y="825" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="70" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="52383" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="320" showattsigs="601" usesdiagramusefillcolour="1" x="1980" linecolour="none" y="990" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="200" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="55334" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="230" showattsigs="601" usesdiagramusefillcolour="1" x="2025" linecolour="none" y="1245" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="350" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="55347" showoperations="1" showpackage="1" showscope="1" showstereotype="0" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <notewidget usesdiagramfillcolour="1" width="180" usesdiagramusefillcolour="1" x="2050" linecolour="none" y="1665" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="90" usefillcolor="1" isinstance="0" xmi.id="60569" text="Variant is used as a Return Type in Strongly Typed Genetic Programming" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="420" showattsigs="601" usesdiagramusefillcolour="0" x="1930" linecolour="#ff0000" y="55" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7dff79" height="510" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="55287" showoperations="1" showpackage="1" showscope="1" showstereotype="1" font="Bitstream Vera Sans,10,-1,5,75,0,0,0,0,0" />
     <enumwidget usesdiagramfillcolour="0" width="180" usesdiagramusefillcolour="0" x="1670" linecolour="#ff0000" y="245" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#7dff79" height="130" usefillcolor="1" isinstance="0" xmi.id="74314" showpackage="1" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="15296" widgetaid="15305" xmi.id="15306" >
      <linepath>
       <startpoint startx="1190" starty="205" />
       <endpoint endx="1190" endy="125" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="15322" widgetaid="15342" xmi.id="15343" >
      <linepath>
       <startpoint startx="450" starty="215" />
       <endpoint endx="450" endy="145" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="15322" widgetaid="15387" xmi.id="15388" >
      <linepath>
       <startpoint startx="150" starty="215" />
       <endpoint endx="390" endy="145" />
       <point x="150" y="190" />
       <point x="390" y="190" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" widgetbid="15322" widgetaid="15431" xmi.id="15432" >
      <linepath>
       <startpoint startx="750" starty="210" />
       <endpoint endx="510" endy="145" />
       <point x="750" y="190" />
       <point x="510" y="190" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="15707" widgetaid="17051" xmi.id="19544" >
      <linepath>
       <startpoint startx="1110" starty="1045" />
       <endpoint endx="1020" endy="990" />
       <point x="1110" y="1020" />
       <point x="1020" y="1020" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="15771" widgetaid="15888" xmi.id="18304" >
      <linepath>
       <startpoint startx="500" starty="1075" />
       <endpoint endx="500" endy="945" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="3" totalcountb="3" indexb="2" widgetbid="15771" widgetaid="21688" xmi.id="22046" >
      <linepath>
       <startpoint startx="620" starty="1510" />
       <endpoint endx="560" endy="945" />
       <point x="620" y="1480" />
       <point x="730" y="1480" />
       <point x="730" y="1030" />
       <point x="560" y="1030" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="15707" widgetaid="22266" xmi.id="22420" >
      <linepath>
       <startpoint startx="1110" starty="1470" />
       <endpoint endx="1200" endy="990" />
       <point x="1110" y="1420" />
       <point x="1410" y="1420" />
       <point x="1410" y="1020" />
       <point x="1200" y="1020" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="4" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="25294" widgetaid="21688" roleBdoc="" documentation="" roleAdoc="" type="509" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="290" starty="1510" />
       <endpoint endx="200" endy="1440" />
       <point x="290" y="1480" />
       <point x="200" y="1480" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="15707" widgetaid="15771" xmi.id="28796" >
      <linepath>
       <startpoint startx="630" starty="900" />
       <endpoint endx="835" endy="900" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="110" usesdiagramusefillcolour="1" x="685" linecolour="none" y="905" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="92393" text="&lt;&lt; creates >>" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="4" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="22731" widgetaid="21688" xmi.id="23143" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="450" starty="1510" />
       <endpoint endx="520" endy="1440" />
       <point x="450" y="1480" />
       <point x="520" y="1480" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="120" usesdiagramusefillcolour="1" x="400" linecolour="none" y="1445" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="30" usefillcolor="1" pretext="+" isinstance="0" xmi.id="92394" text="treeInitialization" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="21688" widgetaid="40065" xmi.id="40837" >
      <linepath>
       <startpoint startx="450" starty="1920" />
       <endpoint endx="450" endy="1730" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="20400" widgetaid="41727" xmi.id="42390" >
      <linepath>
       <startpoint startx="1700" starty="1935" />
       <endpoint endx="1700" endy="1850" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="22266" widgetaid="42704" xmi.id="43615" >
      <linepath>
       <startpoint startx="1110" starty="1920" />
       <endpoint endx="1110" endy="1780" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="52201" widgetaid="52383" xmi.id="52384" >
      <linepath>
       <startpoint startx="2140" starty="825" />
       <endpoint endx="2140" endy="755" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="55334" widgetaid="55347" xmi.id="55348" >
      <linepath>
       <startpoint startx="2140" starty="1245" />
       <endpoint endx="2140" endy="1190" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="16640" widgetaid="60569" roleBdoc="" documentation="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="2140" starty="1755" />
       <endpoint endx="2140" endy="1860" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="15322" widgetaid="15890" xmi.id="61816" >
      <linepath>
       <startpoint startx="530" starty="455" />
       <endpoint endx="575" endy="80" />
       <point x="530" y="430" />
       <point x="920" y="430" />
       <point x="920" y="80" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="15296" widgetaid="15890" xmi.id="62531" >
      <linepath>
       <startpoint startx="1070" starty="455" />
       <endpoint endx="1105" endy="80" />
       <point x="1070" y="430" />
       <point x="950" y="430" />
       <point x="950" y="80" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="15771" widgetaid="15890" xmi.id="63246" >
      <linepath>
       <startpoint startx="530" starty="725" />
       <endpoint endx="530" endy="855" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="15791" widgetaid="15890" xmi.id="63605" >
      <linepath>
       <startpoint startx="1070" starty="725" />
       <endpoint endx="1650" endy="825" />
       <point x="1070" y="770" />
       <point x="1650" y="770" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="15707" widgetaid="15791" xmi.id="64409" >
      <linepath>
       <startpoint startx="1525" starty="900" />
       <endpoint endx="1385" endy="900" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="20400" widgetaid="22266" xmi.id="64946" >
      <linepath>
       <startpoint startx="1385" starty="1630" />
       <endpoint endx="1480" endy="1630" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="41727" widgetaid="42704" xmi.id="65127" >
      <linepath>
       <startpoint startx="1370" starty="2010" />
       <endpoint endx="1480" endy="2010" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="20400" widgetaid="20400" xmi.id="66472" >
      <linepath>
       <startpoint startx="1920" starty="1520" />
       <endpoint endx="1920" endy="1740" />
       <point x="1980" y="1520" />
       <point x="1980" y="1740" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="40" usesdiagramusefillcolour="1" x="1920" linecolour="none" y="1705" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="30" usefillcolor="1" pretext="" isinstance="0" xmi.id="92398" text="1..n" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="90" usesdiagramusefillcolour="1" x="1925" linecolour="none" y="1745" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="30" usefillcolor="1" pretext="#" isinstance="0" xmi.id="92397" text="argument" font="Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="74314" widgetaid="55287" xmi.id="78503" >
      <linepath>
       <startpoint startx="1930" starty="310" />
       <endpoint endx="1850" endy="310" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="0" indexb="0" widgetbid="55287" widgetaid="55287" xmi.id="78684" >
      <linepath>
       <startpoint startx="2035" starty="55" />
       <endpoint endx="2245" endy="55" />
       <point x="2040" y="30" />
       <point x="2240" y="30" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="96885" />
     <listitem open="0" type="813" id="89973" />
     <listitem open="1" type="813" id="96801" />
     <listitem open="1" type="818" id="15295" >
      <listitem open="0" type="813" id="15890" >
       <listitem open="0" type="814" id="15892" />
       <listitem open="0" type="814" id="15893" />
       <listitem open="0" type="814" id="15895" />
       <listitem open="0" type="814" id="15897" />
       <listitem open="0" type="814" id="15898" />
       <listitem open="0" type="814" id="15899" />
       <listitem open="0" type="814" id="15900" />
       <listitem open="0" type="814" id="15901" />
       <listitem open="0" type="815" id="15902" />
       <listitem open="0" type="815" id="15910" />
       <listitem open="0" type="815" id="15911" />
       <listitem open="0" type="815" id="15912" />
       <listitem open="0" type="815" id="15913" />
       <listitem open="0" type="815" id="15914" />
      </listitem>
      <listitem open="0" type="813" id="15707" >
       <listitem open="0" type="815" id="15708" />
       <listitem open="0" type="815" id="15709" />
       <listitem open="0" type="815" id="15712" />
       <listitem open="0" type="815" id="15713" />
       <listitem open="0" type="815" id="15714" />
       <listitem open="0" type="815" id="15715" />
       <listitem open="0" type="815" id="15717" />
       <listitem open="0" type="815" id="15722" />
      </listitem>
      <listitem open="0" type="813" id="15771" >
       <listitem open="0" type="815" id="15772" />
       <listitem open="0" type="815" id="15773" />
       <listitem open="0" type="815" id="15774" />
      </listitem>
      <listitem open="0" type="813" id="15791" >
       <listitem open="0" type="814" id="15792" />
       <listitem open="0" type="814" id="15793" />
       <listitem open="0" type="815" id="15794" />
       <listitem open="0" type="815" id="15796" />
       <listitem open="0" type="815" id="15797" />
       <listitem open="0" type="815" id="15798" />
       <listitem open="0" type="815" id="15799" />
      </listitem>
      <listitem open="0" type="813" id="15431" >
       <listitem open="0" type="814" id="15435" />
       <listitem open="0" type="814" id="53606" />
       <listitem open="0" type="814" id="53671" />
       <listitem open="0" type="815" id="15436" />
       <listitem open="0" type="815" id="15437" />
       <listitem open="0" type="815" id="15438" />
       <listitem open="0" type="815" id="15440" />
       <listitem open="0" type="815" id="15441" />
       <listitem open="0" type="815" id="53736" />
      </listitem>
      <listitem open="0" type="813" id="15387" >
       <listitem open="0" type="814" id="15391" />
       <listitem open="0" type="814" id="15393" />
       <listitem open="0" type="814" id="15394" />
       <listitem open="0" type="815" id="15395" />
       <listitem open="0" type="815" id="15396" />
       <listitem open="0" type="815" id="15397" />
       <listitem open="0" type="815" id="15399" />
       <listitem open="0" type="815" id="15400" />
      </listitem>
      <listitem open="0" type="813" id="15322" >
       <listitem open="0" type="814" id="15324" />
       <listitem open="0" type="815" id="15325" />
       <listitem open="0" type="815" id="15326" />
       <listitem open="0" type="815" id="15327" />
       <listitem open="0" type="815" id="15329" />
       <listitem open="0" type="815" id="15331" />
      </listitem>
      <listitem open="0" type="813" id="15296" >
       <listitem open="0" type="815" id="15297" />
       <listitem open="0" type="815" id="15299" />
       <listitem open="0" type="815" id="15300" />
      </listitem>
      <listitem open="0" type="813" id="15305" >
       <listitem open="0" type="814" id="15310" />
       <listitem open="0" type="814" id="15311" />
       <listitem open="0" type="815" id="15312" />
       <listitem open="0" type="815" id="15314" />
       <listitem open="0" type="815" id="15315" />
      </listitem>
      <listitem open="0" type="813" id="15342" >
       <listitem open="0" type="814" id="15346" />
       <listitem open="0" type="814" id="15348" />
       <listitem open="0" type="814" id="15349" />
       <listitem open="0" type="815" id="15350" />
       <listitem open="0" type="815" id="15352" />
       <listitem open="0" type="815" id="15353" />
       <listitem open="0" type="815" id="15355" />
       <listitem open="0" type="815" id="15356" />
      </listitem>
      <listitem open="0" type="818" id="17065" >
       <listitem open="0" type="813" id="17051" >
        <listitem open="0" type="814" id="17069" />
        <listitem open="0" type="814" id="17071" />
        <listitem open="0" type="814" id="17073" />
        <listitem open="0" type="815" id="17052" />
        <listitem open="0" type="815" id="17053" />
        <listitem open="0" type="815" id="17055" />
        <listitem open="0" type="815" id="17056" />
        <listitem open="0" type="815" id="17057" />
        <listitem open="0" type="815" id="17058" />
        <listitem open="0" type="815" id="17060" />
        <listitem open="0" type="815" id="17064" />
        <listitem open="0" type="815" id="17074" />
        <listitem open="0" type="815" id="17089" />
        <listitem open="0" type="815" id="17090" />
       </listitem>
       <listitem open="0" type="813" id="15888" >
        <listitem open="0" type="814" id="17776" />
        <listitem open="0" type="815" id="17770" />
        <listitem open="0" type="815" id="17771" />
        <listitem open="0" type="815" id="17772" />
        <listitem open="0" type="815" id="17777" />
        <listitem open="0" type="815" id="17779" />
       </listitem>
      </listitem>
      <listitem open="1" type="818" id="20398" >
       <listitem open="1" type="813" id="20400" >
        <listitem open="0" type="814" id="20402" />
        <listitem open="0" type="814" id="20403" />
        <listitem open="0" type="814" id="20404" />
        <listitem open="0" type="814" id="20405" />
        <listitem open="0" type="814" id="20406" />
        <listitem open="0" type="814" id="20408" />
        <listitem open="0" type="815" id="20409" />
        <listitem open="0" type="815" id="20411" />
        <listitem open="0" type="815" id="20412" />
        <listitem open="0" type="815" id="20413" />
        <listitem open="0" type="815" id="20414" />
        <listitem open="0" type="815" id="20415" />
        <listitem open="0" type="815" id="20416" />
        <listitem open="0" type="815" id="20419" />
        <listitem open="0" type="815" id="20422" />
        <listitem open="0" type="815" id="20424" />
        <listitem open="0" type="815" id="20425" />
        <listitem open="0" type="815" id="20426" />
        <listitem open="0" type="815" id="83511" />
        <listitem open="0" type="815" id="83785" />
        <listitem open="0" type="815" id="84152" />
        <listitem open="0" type="815" id="96302" />
        <listitem open="0" type="815" id="96385" />
       </listitem>
       <listitem open="1" type="813" id="22266" >
        <listitem open="0" type="814" id="29305" />
        <listitem open="0" type="814" id="29362" />
        <listitem open="0" type="815" id="29419" />
        <listitem open="0" type="815" id="29534" />
        <listitem open="0" type="815" id="29766" />
        <listitem open="0" type="815" id="97301" />
        <listitem open="0" type="815" id="97386" />
        <listitem open="0" type="815" id="97557" />
        <listitem open="0" type="815" id="29825" />
        <listitem open="0" type="815" id="29943" />
        <listitem open="0" type="815" id="30061" />
        <listitem open="0" type="815" id="30120" />
        <listitem open="0" type="815" id="30180" />
        <listitem open="0" type="815" id="30300" />
        <listitem open="0" type="815" id="30423" />
        <listitem open="0" type="815" id="82696" />
       </listitem>
       <listitem open="1" type="813" id="21688" >
        <listitem open="0" type="814" id="22576" />
        <listitem open="0" type="814" id="23143" />
        <listitem open="0" type="815" id="24084" />
        <listitem open="0" type="815" id="24136" />
        <listitem open="0" type="815" id="24240" />
        <listitem open="0" type="815" id="26134" />
        <listitem open="0" type="815" id="26454" />
        <listitem open="0" type="815" id="82158" />
        <listitem open="0" type="815" id="26723" />
        <listitem open="0" type="815" id="26779" />
        <listitem open="0" type="815" id="98160" />
        <listitem open="0" type="831" id="25294" />
       </listitem>
       <listitem open="1" type="818" id="37179" >
        <listitem open="1" type="813" id="41727" >
         <listitem open="0" type="814" id="93260" />
         <listitem open="0" type="814" id="93339" />
         <listitem open="0" type="815" id="41734" />
         <listitem open="0" type="815" id="41736" />
         <listitem open="0" type="815" id="86073" />
         <listitem open="0" type="815" id="86442" />
         <listitem open="0" type="815" id="86628" />
        </listitem>
        <listitem open="1" type="813" id="42704" >
         <listitem open="0" type="815" id="42713" />
         <listitem open="0" type="815" id="42715" />
         <listitem open="0" type="815" id="42717" />
         <listitem open="0" type="815" id="42718" />
         <listitem open="0" type="815" id="42719" />
         <listitem open="0" type="815" id="42720" />
         <listitem open="0" type="815" id="42722" />
         <listitem open="0" type="815" id="85616" />
        </listitem>
        <listitem open="1" type="813" id="40065" >
         <listitem open="0" type="814" id="40066" />
         <listitem open="0" type="814" id="95571" />
         <listitem open="0" type="814" id="95652" />
         <listitem open="0" type="815" id="40069" />
         <listitem open="0" type="815" id="40070" />
         <listitem open="0" type="815" id="40071" />
         <listitem open="0" type="815" id="40074" />
         <listitem open="0" type="815" id="40076" />
         <listitem open="0" type="815" id="40079" />
         <listitem open="0" type="815" id="40080" />
         <listitem open="0" type="815" id="85158" />
         <listitem open="0" type="815" id="95813" />
         <listitem open="0" type="815" id="95895" />
        </listitem>
       </listitem>
       <listitem open="1" type="831" id="22731" />
      </listitem>
      <listitem open="1" type="818" id="16639" >
       <listitem open="0" type="813" id="52201" >
        <listitem open="0" type="814" id="52206" />
        <listitem open="0" type="815" id="52207" />
        <listitem open="0" type="815" id="52210" />
        <listitem open="0" type="815" id="52211" />
        <listitem open="0" type="815" id="52213" />
       </listitem>
       <listitem open="0" type="813" id="52383" >
        <listitem open="0" type="815" id="52387" />
        <listitem open="0" type="815" id="52389" />
       </listitem>
       <listitem open="0" type="813" id="55287" >
        <listitem open="0" type="814" id="55297" />
        <listitem open="0" type="814" id="55298" />
        <listitem open="0" type="814" id="55301" />
        <listitem open="0" type="815" id="55288" />
        <listitem open="0" type="815" id="55289" />
        <listitem open="0" type="815" id="55292" />
        <listitem open="0" type="815" id="55295" />
        <listitem open="0" type="815" id="55302" />
        <listitem open="0" type="815" id="55303" />
        <listitem open="0" type="815" id="55304" />
        <listitem open="0" type="815" id="55306" />
        <listitem open="0" type="815" id="55307" />
        <listitem open="0" type="815" id="55309" />
        <listitem open="0" type="815" id="55312" />
        <listitem open="0" type="815" id="55313" />
        <listitem open="0" type="815" id="55317" />
        <listitem open="0" type="815" id="55319" />
        <listitem open="0" type="815" id="55321" />
        <listitem open="0" type="815" id="55323" />
        <listitem open="0" type="815" id="55325" />
        <listitem open="0" type="815" id="55327" />
        <listitem open="0" type="815" id="55328" />
        <listitem open="0" type="815" id="55329" />
        <listitem open="0" type="815" id="55330" />
        <listitem open="0" type="815" id="55331" />
        <listitem open="0" type="815" id="55332" />
       </listitem>
       <listitem open="0" type="813" id="16733" >
        <listitem open="0" type="814" id="16737" />
        <listitem open="0" type="815" id="16734" />
        <listitem open="0" type="815" id="16735" />
        <listitem open="0" type="815" id="16738" />
        <listitem open="0" type="815" id="16740" />
        <listitem open="0" type="815" id="16741" />
        <listitem open="0" type="815" id="16742" />
        <listitem open="0" type="815" id="16743" />
        <listitem open="0" type="815" id="16744" />
        <listitem open="0" type="815" id="16746" />
       </listitem>
       <listitem open="0" type="813" id="55334" >
        <listitem open="0" type="814" id="55337" />
        <listitem open="0" type="815" id="55335" />
        <listitem open="0" type="815" id="55336" />
        <listitem open="0" type="815" id="55338" />
        <listitem open="0" type="815" id="55340" />
        <listitem open="0" type="815" id="55341" />
        <listitem open="0" type="815" id="55342" />
        <listitem open="0" type="815" id="55343" />
        <listitem open="0" type="815" id="55344" />
        <listitem open="0" type="815" id="55346" />
       </listitem>
       <listitem open="0" type="813" id="55347" >
        <listitem open="0" type="814" id="55352" />
        <listitem open="0" type="814" id="55353" />
        <listitem open="0" type="814" id="55354" />
        <listitem open="0" type="814" id="55355" />
        <listitem open="0" type="814" id="55356" />
        <listitem open="0" type="814" id="55357" />
        <listitem open="0" type="814" id="55358" />
        <listitem open="0" type="814" id="55359" />
        <listitem open="0" type="814" id="55360" />
        <listitem open="0" type="814" id="55361" />
        <listitem open="0" type="814" id="55362" />
        <listitem open="0" type="814" id="55364" />
        <listitem open="0" type="814" id="55366" />
        <listitem open="0" type="815" id="55367" />
        <listitem open="0" type="815" id="55369" />
        <listitem open="0" type="815" id="55370" />
        <listitem open="0" type="815" id="55371" />
        <listitem open="0" type="815" id="55373" />
       </listitem>
       <listitem open="0" type="813" id="16640" >
        <listitem open="0" type="813" id="16643" />
        <listitem open="0" type="813" id="16641" />
        <listitem open="0" type="814" id="16644" />
        <listitem open="0" type="814" id="16645" />
        <listitem open="0" type="815" id="16646" />
        <listitem open="0" type="815" id="16647" />
        <listitem open="0" type="815" id="16649" />
        <listitem open="0" type="815" id="16651" />
        <listitem open="0" type="815" id="16653" />
        <listitem open="0" type="815" id="16655" />
        <listitem open="0" type="815" id="16658" />
        <listitem open="0" type="815" id="16659" />
        <listitem open="0" type="815" id="16660" />
        <listitem open="0" type="815" id="16661" />
        <listitem open="0" type="815" id="16662" />
        <listitem open="0" type="815" id="16663" />
        <listitem open="0" type="815" id="16664" />
        <listitem open="0" type="815" id="16665" />
        <listitem open="0" type="815" id="16667" />
        <listitem open="0" type="815" id="16669" />
        <listitem open="0" type="815" id="16671" />
        <listitem open="0" type="815" id="16673" />
       </listitem>
       <listitem open="0" type="831" id="74314" />
      </listitem>
     </listitem>
     <listitem open="0" type="818" id="15723" >
      <listitem open="0" type="813" id="52202" />
      <listitem open="0" type="813" id="15724" />
     </listitem>
     <listitem open="1" type="830" label="Datatypes" >
      <listitem open="0" type="829" id="20418" />
      <listitem open="0" type="829" id="20407" />
      <listitem open="1" type="829" id="93340" />
      <listitem open="0" type="829" id="15330" />
      <listitem open="0" type="829" id="15719" />
      <listitem open="0" type="829" id="15894" />
      <listitem open="1" type="829" id="86166" />
      <listitem open="0" type="829" id="55294" />
      <listitem open="0" type="829" id="55296" />
      <listitem open="0" type="829" id="15323" />
      <listitem open="0" type="829" id="16736" />
      <listitem open="0" type="829" id="15896" />
      <listitem open="0" type="829" id="15891" />
      <listitem open="1" type="829" id="15289" />
      <listitem open="1" type="829" id="15288" />
      <listitem open="0" type="829" id="15710" />
      <listitem open="0" type="829" id="55290" />
      <listitem open="0" type="829" id="52212" />
      <listitem open="0" type="829" id="52208" />
      <listitem open="0" type="829" id="55315" />
      <listitem open="0" type="829" id="55351" />
      <listitem open="1" type="829" id="15291" />
      <listitem open="0" type="829" id="15392" />
      <listitem open="1" type="829" id="15290" />
      <listitem open="0" type="829" id="17081" />
      <listitem open="0" type="829" id="17086" />
      <listitem open="1" type="829" id="15286" />
      <listitem open="1" type="829" id="15292" />
      <listitem open="0" type="829" id="55300" />
      <listitem open="1" type="829" id="15293" />
      <listitem open="0" type="829" id="15725" />
      <listitem open="1" type="829" id="15294" />
      <listitem open="1" type="829" id="82249" />
      <listitem open="1" type="829" id="84337" />
      <listitem open="0" type="829" id="17070" />
      <listitem open="0" type="829" id="15298" />
      <listitem open="0" type="829" id="16656" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="" id="89973" parent_class="89973" fileExt=".cpp" fileName="genetype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genetype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genetype.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15296" parent_class="15296" fileExt=".cpp" fileName="stopcriterion" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;stopcriterion.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="15297" tag="operation_15297" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15299" tag="operation_15299" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15300" tag="operation_15300" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief actual stop criterion&amp;#010;\return true if EvolutionaryAlgorithm must stop, false otherwise" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stopcriterion.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15305" parent_class="15305" fileExt=".cpp" fileName="stopcriterionmaxiteration" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;stopcriterionmaxiteration.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15310" tag="hblock_tag_0" canDelete="false" classfield_id="15310" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15310" tag="hblock_tag_1" canDelete="false" classfield_id="15310" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15311" tag="hblock_tag_2" canDelete="false" classfield_id="15311" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15311" tag="hblock_tag_3" canDelete="false" classfield_id="15311" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15312" tag="operation_15312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15314" tag="operation_15314" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15315" tag="operation_15315" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stopcriterionmaxiteration.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15310" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15310" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15310" tag="hblock_tag_0" canDelete="false" classfield_id="15310" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15310" tag="hblock_tag_1" canDelete="false" classfield_id="15310" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15311" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15311" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15311" tag="hblock_tag_2" canDelete="false" classfield_id="15311" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15311" tag="hblock_tag_3" canDelete="false" classfield_id="15311" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15322" parent_class="15322" fileExt=".cpp" fileName="selectionmethod" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;selectionmethod.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15324" tag="hblock_tag_0" canDelete="false" classfield_id="15324" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15324" tag="hblock_tag_1" canDelete="false" classfield_id="15324" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15325" tag="operation_15325" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15326" tag="operation_15326" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15327" tag="operation_15327" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15329" tag="operation_15329" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief selects an Individual from the current Population&amp;#010;Subclasses override this method to implement a specific selection policy&amp;#010;\sa init(Population* population)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15331" tag="operation_15331" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief retrieves the Individual having highest fitness in the Population&amp;#010;\return the best Individual&amp;#010;\sa Individual::fitness()" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			selectionmethod.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15324" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15324" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15324" tag="hblock_tag_0" canDelete="false" classfield_id="15324" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15324" tag="hblock_tag_1" canDelete="false" classfield_id="15324" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15342" parent_class="15342" fileExt=".cpp" fileName="tournamentselection" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;tournamentselection.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15346" tag="hblock_tag_0" canDelete="false" classfield_id="15346" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15346" tag="hblock_tag_1" canDelete="false" classfield_id="15346" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15348" tag="hblock_tag_2" canDelete="false" classfield_id="15348" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15348" tag="hblock_tag_3" canDelete="false" classfield_id="15348" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15349" tag="hblock_tag_4" canDelete="false" classfield_id="15349" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15349" tag="hblock_tag_5" canDelete="false" classfield_id="15349" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15350" tag="operation_15350" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief sets size as the Tournament size&amp;#010;\param size desired Tournament size" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15352" tag="operation_15352" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15353" tag="operation_15353" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15355" tag="operation_15355" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief selects an Individual from the current Population&amp;#010;Chooses &lt;i>size&lt;/i> individuals from the Populations and selects the best among them.&amp;#010;\return the selected individual&amp;#010;\sa init(Population* population)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15356" tag="operation_15356" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief retrieves the Individual having highest fitness in the Population&amp;#010;\return the best Individual&amp;#010;\sa Individual::fitness()" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			tournamentselection.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15346" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15346" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15346" tag="hblock_tag_0" canDelete="false" classfield_id="15346" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15346" tag="hblock_tag_1" canDelete="false" classfield_id="15346" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15348" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15348" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15348" tag="hblock_tag_2" canDelete="false" classfield_id="15348" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15348" tag="hblock_tag_3" canDelete="false" classfield_id="15348" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15349" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15349" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15349" tag="hblock_tag_4" canDelete="false" classfield_id="15349" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15349" tag="hblock_tag_5" canDelete="false" classfield_id="15349" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15387" parent_class="15387" fileExt=".cpp" fileName="roulettewheel" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;roulettewheel.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15391" tag="hblock_tag_0" canDelete="false" classfield_id="15391" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15391" tag="hblock_tag_1" canDelete="false" classfield_id="15391" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15393" tag="hblock_tag_2" canDelete="false" classfield_id="15393" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15393" tag="hblock_tag_3" canDelete="false" classfield_id="15393" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15394" tag="hblock_tag_4" canDelete="false" classfield_id="15394" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15394" tag="hblock_tag_5" canDelete="false" classfield_id="15394" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15395" tag="operation_15395" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default constructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15396" tag="operation_15396" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15397" tag="operation_15397" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief initializes the RouletteWheel selection method with a specific Population&amp;#010;When initializing, the Cumulative Distribution Function (CDF) associated to the probability distribution defined by the previously mentioned \f$P_i\f$ is calculated.&amp;#010;\param population the Population to select the Individuals from" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15399" tag="operation_15399" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief selects an Individual from the current Population&amp;#010;An Individual &lt;i>i&lt;/i> will be selected with probability&amp;#010;\f[&amp;#010;P_i = \frac{f_i}{\sum\limits_{j=0}^{N-1}f_j}&amp;#010;\f]&amp;#010;\return the selected Individual&amp;#010;\sa init(Population* population)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15400" tag="operation_15400" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief retrieves the Individual having highest fitness in the Population&amp;#010;\return the best Individual&amp;#010;\sa Individual::fitness()" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			roulettewheel.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15391" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15391" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15391" tag="hblock_tag_0" canDelete="false" classfield_id="15391" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15391" tag="hblock_tag_1" canDelete="false" classfield_id="15391" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15393" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15393" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15393" tag="hblock_tag_2" canDelete="false" classfield_id="15393" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15393" tag="hblock_tag_3" canDelete="false" classfield_id="15393" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15394" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15394" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15394" tag="hblock_tag_4" canDelete="false" classfield_id="15394" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15394" tag="hblock_tag_5" canDelete="false" classfield_id="15394" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15431" parent_class="15431" fileExt=".cpp" fileName="rankingselection" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;rankingselection.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15435" tag="hblock_tag_0" canDelete="false" classfield_id="15435" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15435" tag="hblock_tag_1" canDelete="false" classfield_id="15435" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="53606" tag="hblock_tag_2" canDelete="false" classfield_id="53606" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="53606" tag="hblock_tag_3" canDelete="false" classfield_id="53606" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="53671" tag="hblock_tag_4" canDelete="false" classfield_id="53671" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="53671" tag="hblock_tag_5" canDelete="false" classfield_id="53671" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15436" tag="operation_15436" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15437" tag="operation_15437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15438" tag="operation_15438" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15440" tag="operation_15440" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15441" tag="operation_15441" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="53736" tag="operation_53736" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rankingselection.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15435" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15435" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15435" tag="hblock_tag_0" canDelete="false" classfield_id="15435" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15435" tag="hblock_tag_1" canDelete="false" classfield_id="15435" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="53606" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="53606" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="53606" tag="hblock_tag_2" canDelete="false" classfield_id="53606" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="53606" tag="hblock_tag_3" canDelete="false" classfield_id="53606" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="53671" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="53671" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="53671" tag="hblock_tag_4" canDelete="false" classfield_id="53671" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="53671" tag="hblock_tag_5" canDelete="false" classfield_id="53671" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15707" parent_class="15707" fileExt=".cpp" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individual.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="15708" tag="operation_15708" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default void constructor&amp;#010;Does nothing" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15709" tag="operation_15709" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default copy constructor&amp;#010;Does nothing" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15712" tag="operation_15712" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor&amp;#010;Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15713" tag="operation_15713" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract fitness function&amp;#010;This function must be extended by sublcasses to calculate the fitness of the individual.&amp;#010;\return the fitness of the current individual" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15714" tag="operation_15714" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract copy function&amp;#010;This function must be extended by sublcasses to perform copy.&amp;#010;\return a copy of the individual&amp;#010;\sa Individual(const Individual&amp; individual)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15715" tag="operation_15715" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract mutation&amp;#010;Must be overridden in subclasses to perform actual mutation.&amp;#010;\param mutationProbability the probability that mutation occurs&amp;#010;\return 0 if the operation was successful&amp;#010;\sa crossOver" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15717" tag="operation_15717" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract crossover&amp;#010;Performs crossover between this and individual i, saving the resulting children in child1 and child2.&amp;#010;Subclasses must override this method to perform actual crossover&amp;#010;\param i the partner to use to perform crossover.&amp;#010;\param child1 first child.&amp;#010;\param child2 second child.&amp;#010;\return 0 if the operation was successful&amp;#010;\sa mutate(double mutationProbabilty)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15722" tag="operation_15722" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates a string representing the individual&amp;#010;Subclasses must override this method to output an appropriate representation of the Individual.&amp;#010;\return a string representation of the individual" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15771" parent_class="15771" fileExt=".cpp" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individualfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="15772" tag="operation_15772" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default void constructor&amp;#010;Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15773" tag="operation_15773" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor&amp;#010;Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15774" tag="operation_15774" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract generate function&amp;#010;This function must be extended by sublcasses to generate appropriate individuals.&amp;#010;\return a new Individual" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15791" parent_class="15791" fileExt=".cpp" fileName="population" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;population.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15792" tag="hblock_tag_0" canDelete="false" classfield_id="15792" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15792" tag="hblock_tag_1" canDelete="false" classfield_id="15792" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15793" tag="hblock_tag_2" canDelete="false" classfield_id="15793" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of individuals&amp;#010;array of Individua&amp;#010;@return the value of individuals" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15793" tag="hblock_tag_3" canDelete="false" classfield_id="15793" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of individuals&amp;#010;array of Individua&amp;#010;@param value the value of individuals" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15794" tag="operation_15794" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates a new Population able to hold &lt;b>size&lt;/b> Individuals" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15796" tag="operation_15796" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief destroys this population and the Idividual objects it contains&amp;#010;\sa Individual::~Individual(void);" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15797" tag="operation_15797" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15798" tag="operation_15798" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15799" tag="operation_15799" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief retrieves the Individual having highest fitness in the Population&amp;#010;\return the best Individual&amp;#010;\sa Individual::fitness()" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			population.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15792" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15792" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15792" tag="hblock_tag_0" canDelete="false" classfield_id="15792" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15792" tag="hblock_tag_1" canDelete="false" classfield_id="15792" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15793" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="array of Individua" />
       </header>
       <ccfdeclarationcodeblock parent_id="15793" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15793" tag="hblock_tag_2" canDelete="false" classfield_id="15793" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of individuals&amp;#010;array of Individua&amp;#010;@return the value of individuals" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15793" tag="hblock_tag_3" canDelete="false" classfield_id="15793" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of individuals&amp;#010;array of Individua&amp;#010;@param value the value of individuals" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="15890" parent_class="15890" fileExt=".cpp" fileName="evolutionaryalgorithm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;evolutionaryalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="15892" tag="hblock_tag_0" canDelete="false" classfield_id="15892" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15892" tag="hblock_tag_1" canDelete="false" classfield_id="15892" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15893" tag="hblock_tag_2" canDelete="false" classfield_id="15893" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15893" tag="hblock_tag_3" canDelete="false" classfield_id="15893" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15895" tag="hblock_tag_4" canDelete="false" classfield_id="15895" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15895" tag="hblock_tag_5" canDelete="false" classfield_id="15895" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15897" tag="hblock_tag_6" canDelete="false" classfield_id="15897" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15897" tag="hblock_tag_7" canDelete="false" classfield_id="15897" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15898" tag="hblock_tag_8" canDelete="false" classfield_id="15898" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15898" tag="hblock_tag_9" canDelete="false" classfield_id="15898" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15899" tag="hblock_tag_10" canDelete="false" classfield_id="15899" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15899" tag="hblock_tag_11" canDelete="false" classfield_id="15899" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15900" tag="hblock_tag_12" canDelete="false" classfield_id="15900" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15900" tag="hblock_tag_13" canDelete="false" classfield_id="15900" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="15901" tag="hblock_tag_14" canDelete="false" classfield_id="15901" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="15901" tag="hblock_tag_15" canDelete="false" classfield_id="15901" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="15902" tag="operation_15902" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="\param populationSize size of the population&amp;#010;\param factory the individual factory, redefine yours to generate your own Individual.&amp;#010;\param stopCriterion this class decides the end of the algortihm.&amp;#010;\param selectionMethod the selection method, if you don't specify it, the default RouletteWheel will be used. The genetiK library has genetiK::RouletteWheel, genetiK::TournamentSelection and RankingSelection. &amp;#010;\param mutationProbability 0.01 by default.&amp;#010;\param crossOverProbability 0.7 by default.&amp;#010;\param elitism if this is true, the best individual of the current generation will be copied to the next one.&amp;#010;\sa Version " />
         </header>
        </codeoperation>
        <codeoperation parent_id="15910" tag="operation_15910" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="15911" tag="operation_15911" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Call this method to start the algorithm. &amp;#010;\return return 0 if it's all ok." />
         </header>
        </codeoperation>
        <codeoperation parent_id="15912" tag="operation_15912" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Usually this method is called by .run(), but if you want more control on the evolution, you can manually call this before evolve()&amp;#010;\return return 0 if it's all ok." />
         </header>
        </codeoperation>
        <codeoperation parent_id="15913" tag="operation_15913" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Usually this method is called by .run(), but if you want more control on the evolution, you can manually call this after generatePopulation()&amp;#010;\return return 0 if it's all ok." />
         </header>
        </codeoperation>
        <codeoperation parent_id="15914" tag="operation_15914" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			evolutionaryalgorithm.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15892" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15892" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15892" tag="hblock_tag_0" canDelete="false" classfield_id="15892" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15892" tag="hblock_tag_1" canDelete="false" classfield_id="15892" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15893" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15893" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15893" tag="hblock_tag_2" canDelete="false" classfield_id="15893" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15893" tag="hblock_tag_3" canDelete="false" classfield_id="15893" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15895" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15895" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15895" tag="hblock_tag_4" canDelete="false" classfield_id="15895" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15895" tag="hblock_tag_5" canDelete="false" classfield_id="15895" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15897" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15897" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15897" tag="hblock_tag_6" canDelete="false" classfield_id="15897" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15897" tag="hblock_tag_7" canDelete="false" classfield_id="15897" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15898" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15898" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15898" tag="hblock_tag_8" canDelete="false" classfield_id="15898" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15898" tag="hblock_tag_9" canDelete="false" classfield_id="15898" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15899" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15899" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15899" tag="hblock_tag_10" canDelete="false" classfield_id="15899" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15899" tag="hblock_tag_11" canDelete="false" classfield_id="15899" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15900" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15900" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15900" tag="hblock_tag_12" canDelete="false" classfield_id="15900" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15900" tag="hblock_tag_13" canDelete="false" classfield_id="15900" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15901" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15901" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15901" tag="hblock_tag_14" canDelete="false" classfield_id="15901" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15901" tag="hblock_tag_15" canDelete="false" classfield_id="15901" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="16640" parent_class="16640" fileExt=".cpp" fileName="variant" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;variant.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="16644" tag="hblock_tag_0" canDelete="false" classfield_id="16644" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16644" tag="hblock_tag_1" canDelete="false" classfield_id="16644" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="16645" tag="hblock_tag_2" canDelete="false" classfield_id="16645" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16645" tag="hblock_tag_3" canDelete="false" classfield_id="16645" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="16646" tag="operation_16646" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16647" tag="operation_16647" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16649" tag="operation_16649" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16651" tag="operation_16651" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16653" tag="operation_16653" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16655" tag="operation_16655" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16658" tag="operation_16658" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16659" tag="operation_16659" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16660" tag="operation_16660" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16661" tag="operation_16661" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16662" tag="operation_16662" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16663" tag="operation_16663" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16664" tag="operation_16664" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16665" tag="operation_16665" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16667" tag="operation_16667" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16669" tag="operation_16669" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16671" tag="operation_16671" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16673" tag="operation_16673" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			variant.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:58:58&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16644" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16644" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16644" tag="hblock_tag_0" canDelete="false" classfield_id="16644" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16644" tag="hblock_tag_1" canDelete="false" classfield_id="16644" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16645" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16645" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16645" tag="hblock_tag_2" canDelete="false" classfield_id="16645" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16645" tag="hblock_tag_3" canDelete="false" classfield_id="16645" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="16733" parent_class="16733" fileExt=".cpp" fileName="random" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;random.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" classfield_id="16737" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" classfield_id="16737" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="16734" tag="operation_16734" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates the default Random implementation.&amp;#010;This constructor is protected because you don't need to create any instance of this class.&amp;#010;You can set this class as the Random imlementation by calling Random::SetDefaultImplementation();" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16735" tag="operation_16735" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16738" tag="operation_16738" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief sets an implementation of the Random.&amp;#010;Call this function to set a new implementation of the random for the GenetiK Library.&amp;#010;\param random The implementation of the random" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16740" tag="operation_16740" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief sets the default implementation of the Random.&amp;#010;Call this function to set the default implementation of the random.&amp;#010;This method will be automatically called by the EvolutionaryAlgorithm if no Random implementation is set." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16741" tag="operation_16741" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16742" tag="operation_16742" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief destroy the current implementation.&amp;#010;Call this method to free the memory." />
         </header>
        </codeoperation>
        <codeoperation parent_id="16743" tag="operation_16743" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;This method returns the next pseudorandom integer, you can override it in your random implementation.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than 4294967296;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16744" tag="operation_16744" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;This method returns the next pseudorandom integer, you can override it in your random implementation.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than max;&amp;#010;&amp;#010;\param max The return value upperbound" />
         </header>
        </codeoperation>
        <codeoperation parent_id="16746" tag="operation_16746" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;This method returns the next pseudorandom double, you can override this method in your random implementation.&amp;#010;Returns a double greater than or equal to 0.0 and less than 1.0;" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			random.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16737" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" classfield_id="16737" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" classfield_id="16737" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="52201" parent_class="52201" fileExt=".cpp" fileName="exception" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;exception.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="52206" tag="hblock_tag_0" canDelete="false" classfield_id="52206" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="52206" tag="hblock_tag_1" canDelete="false" classfield_id="52206" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="52207" tag="operation_52207" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates an Exception associating it the specified string as message.&amp;#010;@param mess a message describing the cause of the exception" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52210" tag="operation_52210" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Deletes the Exception instance" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52211" tag="operation_52211" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52213" tag="operation_52213" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exception.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="52206" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="52206" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="52206" tag="hblock_tag_0" canDelete="false" classfield_id="52206" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="52206" tag="hblock_tag_1" canDelete="false" classfield_id="52206" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="52383" parent_class="52383" fileExt=".cpp" fileName="illegalstateexception" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;illegalstateexception.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="52387" tag="operation_52387" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates an IllegalStateException associating it the specified string as message.&amp;#010;@param mess a message describing the cause of the exception" />
         </header>
        </codeoperation>
        <codeoperation parent_id="52389" tag="operation_52389" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Deletes the IllegalStateException instance" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			illegalstateexception.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="55347" parent_class="55347" fileExt=".cpp" fileName="randomdefault" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;randomdefault.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="55352" tag="hblock_tag_0" canDelete="false" classfield_id="55352" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@return the value of MERS_N" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55352" tag="hblock_tag_1" canDelete="false" classfield_id="55352" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@param value the value of MERS_N" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55353" tag="hblock_tag_2" canDelete="false" classfield_id="55353" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55353" tag="hblock_tag_3" canDelete="false" classfield_id="55353" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55354" tag="hblock_tag_4" canDelete="false" classfield_id="55354" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55354" tag="hblock_tag_5" canDelete="false" classfield_id="55354" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55355" tag="hblock_tag_6" canDelete="false" classfield_id="55355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55355" tag="hblock_tag_7" canDelete="false" classfield_id="55355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55356" tag="hblock_tag_8" canDelete="false" classfield_id="55356" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55356" tag="hblock_tag_9" canDelete="false" classfield_id="55356" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55357" tag="hblock_tag_10" canDelete="false" classfield_id="55357" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55357" tag="hblock_tag_11" canDelete="false" classfield_id="55357" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55358" tag="hblock_tag_12" canDelete="false" classfield_id="55358" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55358" tag="hblock_tag_13" canDelete="false" classfield_id="55358" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55359" tag="hblock_tag_14" canDelete="false" classfield_id="55359" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55359" tag="hblock_tag_15" canDelete="false" classfield_id="55359" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55360" tag="hblock_tag_16" canDelete="false" classfield_id="55360" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55360" tag="hblock_tag_17" canDelete="false" classfield_id="55360" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55361" tag="hblock_tag_18" canDelete="false" classfield_id="55361" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55361" tag="hblock_tag_19" canDelete="false" classfield_id="55361" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55362" tag="hblock_tag_20" canDelete="false" classfield_id="55362" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55362" tag="hblock_tag_21" canDelete="false" classfield_id="55362" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55364" tag="hblock_tag_22" canDelete="false" classfield_id="55364" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55364" tag="hblock_tag_23" canDelete="false" classfield_id="55364" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55366" tag="hblock_tag_24" canDelete="false" classfield_id="55366" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55366" tag="hblock_tag_25" canDelete="false" classfield_id="55366" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="55367" tag="operation_55367" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55369" tag="operation_55369" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55370" tag="operation_55370" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;&amp;#010;This method returns the next pseudorandom integer.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than 4294967296;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55371" tag="operation_55371" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;&amp;#010;This method returns the next pseudorandom integer.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than max;&amp;#010;&amp;#010;@param max The return value upperbound" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55373" tag="operation_55373" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom real.&amp;#010;&amp;#010;This method returns the next pseudorandom double.&amp;#010;Returns a double greater than or equal to 0.0 and less than 1.0;" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			randomdefault.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55352" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// constants for MT19937:" />
       </header>
       <ccfdeclarationcodeblock parent_id="55352" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55352" tag="hblock_tag_0" canDelete="false" classfield_id="55352" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@return the value of MERS_N" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55352" tag="hblock_tag_1" canDelete="false" classfield_id="55352" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@param value the value of MERS_N" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55353" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55353" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55353" tag="hblock_tag_2" canDelete="false" classfield_id="55353" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55353" tag="hblock_tag_3" canDelete="false" classfield_id="55353" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55354" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55354" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55354" tag="hblock_tag_4" canDelete="false" classfield_id="55354" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55354" tag="hblock_tag_5" canDelete="false" classfield_id="55354" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55355" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55355" tag="hblock_tag_6" canDelete="false" classfield_id="55355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55355" tag="hblock_tag_7" canDelete="false" classfield_id="55355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55356" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55356" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55356" tag="hblock_tag_8" canDelete="false" classfield_id="55356" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55356" tag="hblock_tag_9" canDelete="false" classfield_id="55356" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55357" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55357" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55357" tag="hblock_tag_10" canDelete="false" classfield_id="55357" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55357" tag="hblock_tag_11" canDelete="false" classfield_id="55357" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55358" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55358" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55358" tag="hblock_tag_12" canDelete="false" classfield_id="55358" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55358" tag="hblock_tag_13" canDelete="false" classfield_id="55358" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55359" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55359" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55359" tag="hblock_tag_14" canDelete="false" classfield_id="55359" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55359" tag="hblock_tag_15" canDelete="false" classfield_id="55359" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55360" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55360" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55360" tag="hblock_tag_16" canDelete="false" classfield_id="55360" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55360" tag="hblock_tag_17" canDelete="false" classfield_id="55360" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55361" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55361" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55361" tag="hblock_tag_18" canDelete="false" classfield_id="55361" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55361" tag="hblock_tag_19" canDelete="false" classfield_id="55361" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55362" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55362" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55362" tag="hblock_tag_20" canDelete="false" classfield_id="55362" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55362" tag="hblock_tag_21" canDelete="false" classfield_id="55362" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55364" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55364" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55364" tag="hblock_tag_22" canDelete="false" classfield_id="55364" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55364" tag="hblock_tag_23" canDelete="false" classfield_id="55364" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55366" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55366" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55366" tag="hblock_tag_24" canDelete="false" classfield_id="55366" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55366" tag="hblock_tag_25" canDelete="false" classfield_id="55366" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="55334" parent_class="55334" fileExt=".cpp" fileName="random" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;random.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="55337" tag="hblock_tag_0" canDelete="false" classfield_id="55337" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55337" tag="hblock_tag_1" canDelete="false" classfield_id="55337" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="55335" tag="operation_55335" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates the default Random implementation.&amp;#010;&amp;#010;This constructor is protected because you don't need to create any instance of this class.&amp;#010;You can set this class as the Random imlementation by calling Random::SetDefaultImplementation();" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55336" tag="operation_55336" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55338" tag="operation_55338" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief sets an implementation of the Random.&amp;#010;&amp;#010;Call this function to set a new implementation of the random for the GenetiK Library.&amp;#010;@param random The implementation of the random" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55340" tag="operation_55340" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief sets the default implementation of the Random.&amp;#010;&amp;#010;Call this function to set the default implementation of the random.&amp;#010;This method will be automatically called by the EvolutionaryAlgorithm if no Random implementation is set." />
         </header>
        </codeoperation>
        <codeoperation parent_id="55341" tag="operation_55341" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55342" tag="operation_55342" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief destroy the current implementation.&amp;#010;&amp;#010;Call this method to free the memory." />
         </header>
        </codeoperation>
        <codeoperation parent_id="55343" tag="operation_55343" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;&amp;#010;This method returns the next pseudorandom integer, you can override it in your random implementation.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than 4294967296;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55344" tag="operation_55344" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;&amp;#010;This method returns the next pseudorandom integer, you can override it in your random implementation.&amp;#010;Returns an unsigned int greater than or equal to 0 and less than max;&amp;#010;&amp;#010;@param max The return value upperbound" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55346" tag="operation_55346" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Returns the next pseudorandom integer.&amp;#010;&amp;#010;This method returns the next pseudorandom double, you can override this method in your random implementation.&amp;#010;Returns a double greater than or equal to 0.0 and less than 1.0;" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			random.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55337" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55337" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55337" tag="hblock_tag_0" canDelete="false" classfield_id="55337" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55337" tag="hblock_tag_1" canDelete="false" classfield_id="55337" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="55287" parent_class="55287" fileExt=".cpp" fileName="log" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;log.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="55297" tag="hblock_tag_0" canDelete="false" classfield_id="55297" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55297" tag="hblock_tag_1" canDelete="false" classfield_id="55297" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55298" tag="hblock_tag_2" canDelete="false" classfield_id="55298" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55298" tag="hblock_tag_3" canDelete="false" classfield_id="55298" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="55301" tag="hblock_tag_4" canDelete="false" classfield_id="55301" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="55301" tag="hblock_tag_5" canDelete="false" classfield_id="55301" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="55288" tag="operation_55288" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55289" tag="operation_55289" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55292" tag="operation_55292" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55295" tag="operation_55295" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55302" tag="operation_55302" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Retrieve the Log instance&amp;#010;As in classes that implement Singleton pattern, this method retrieves the (unique) instance of the Log class.&amp;#010;If the instance doesn't already exist, it is created.&amp;#010;@return a reference to the Log class" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55303" tag="operation_55303" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Delete the Log instance" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55304" tag="operation_55304" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55306" tag="operation_55306" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55307" tag="operation_55307" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Set the output stream to use for log messages&amp;#010;@return 0 if operation was succesful&amp;#010;@see ELogLevel" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55309" tag="operation_55309" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Set the output file to use for log messages&amp;#010;Opens the specified file and writes log messages to it. The boolean argument permits to specify if output messages should be appended or not.&amp;#010;@param filename the nome of the file &amp;#010;@param append true for append mode, false otherwise&amp;#010;@return 0 if operation was succesful" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55312" tag="operation_55312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55313" tag="operation_55313" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Demands logging of a message with the specified priority level&amp;#010;&amp;#010;Messages will be logged if &lt;b>level&lt;/b> &amp;gt;= threshold.&amp;#010;@param level priority of the message&amp;#010;@param message the message to be logged&amp;#010;@return 1 if the message was logged, 0 otherwise&amp;#010;@see ELogLevel" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55317" tag="operation_55317" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55319" tag="operation_55319" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55321" tag="operation_55321" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55323" tag="operation_55323" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55325" tag="operation_55325" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55327" tag="operation_55327" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55328" tag="operation_55328" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55329" tag="operation_55329" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55330" tag="operation_55330" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55331" tag="operation_55331" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="55332" tag="operation_55332" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="78503" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="78503" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="78503" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="78503" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="78503" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			log.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55297" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55297" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55297" tag="hblock_tag_0" canDelete="false" classfield_id="55297" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55297" tag="hblock_tag_1" canDelete="false" classfield_id="55297" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55298" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55298" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55298" tag="hblock_tag_2" canDelete="false" classfield_id="55298" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55298" tag="hblock_tag_3" canDelete="false" classfield_id="55298" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55301" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55301" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55301" tag="hblock_tag_4" canDelete="false" classfield_id="55301" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55301" tag="hblock_tag_5" canDelete="false" classfield_id="55301" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="78503" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="78503" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="78503" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="78503" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="78503" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="78503" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="78503" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.ga" id="17051" parent_class="17051" fileExt=".cpp" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individual.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="17069" tag="hblock_tag_0" canDelete="false" classfield_id="17069" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17069" tag="hblock_tag_1" canDelete="false" classfield_id="17069" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17071" tag="hblock_tag_2" canDelete="false" classfield_id="17071" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17071" tag="hblock_tag_3" canDelete="false" classfield_id="17071" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="17073" tag="hblock_tag_4" canDelete="false" classfield_id="17073" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17073" tag="hblock_tag_5" canDelete="false" classfield_id="17073" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="17052" tag="operation_17052" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default void constructor&amp;#010;					      Does nothing" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17053" tag="operation_17053" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default copy constructor&amp;#010;					      Does nothing" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17055" tag="operation_17055" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor&amp;#010;					      Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17056" tag="operation_17056" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract fitness function&amp;#010;					      This function must be extended by sublcasses to calculate the fitness of the individual.&amp;#010;					      \return the fitness of the current individual" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17057" tag="operation_17057" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract copy function&amp;#010;					      This function must be extended by sublcasses to perform copy.&amp;#010;					      \return a copy of the individual&amp;#010;					      \sa Individual(const Individual&amp; individual)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17058" tag="operation_17058" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract mutation&amp;#010;					      Must be overridden in subclasses to perform actual mutation.&amp;#010;					      \param mutationProbability the probability that mutation occurs&amp;#010;					      \return 0 if the operation was successful&amp;#010;					      \sa crossOver" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17060" tag="operation_17060" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract crossover&amp;#010;					      Performs crossover between this and individual i, saving the resulting children in child1 and child2.&amp;#010;					      Subclasses must override this method to perform actual crossover&amp;#010;					      \param i the partner to use to perform crossover.&amp;#010;					      \param child1 first child.&amp;#010;					      \param child2 second child.&amp;#010;					      \return 0 if the operation was successful&amp;#010;					      \sa mutate(double mutationProbabilty)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17064" tag="operation_17064" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates a string representing the individual&amp;#010;					      Subclasses must override this method to output an appropriate representation of the Individual.&amp;#010;					      \return a string representation of the individual" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17074" tag="operation_17074" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief creates an Individual by allocating &lt;b>length&lt;/b> bits and filling them with random data.&amp;#010;				       It should be called by subclasses' unsigned int constructors.&amp;#010;				       \todo add a constructor that allocates memory but does not initialize with random data&amp;#010;				       \param length specifies the length of the individual to be created&amp;#010;				       \sa Individual(const Individual&amp; individual)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17089" tag="operation_17089" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17090" tag="operation_17090" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief [] operator&amp;#010;					      Accesses a single bit of the individual bit string.&amp;#010;					      \param index 0-based index of the bit to retrieve&amp;#010;					      \return true if this[index] is 1, false otherwise" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/ga&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17069" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17069" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17069" tag="hblock_tag_0" canDelete="false" classfield_id="17069" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17069" tag="hblock_tag_1" canDelete="false" classfield_id="17069" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17071" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17071" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17071" tag="hblock_tag_2" canDelete="false" classfield_id="17071" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17071" tag="hblock_tag_3" canDelete="false" classfield_id="17071" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17073" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17073" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17073" tag="hblock_tag_4" canDelete="false" classfield_id="17073" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17073" tag="hblock_tag_5" canDelete="false" classfield_id="17073" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.ga" id="15888" parent_class="15888" fileExt=".cpp" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individualfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="17776" tag="hblock_tag_0" canDelete="false" classfield_id="17776" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="17776" tag="hblock_tag_1" canDelete="false" classfield_id="17776" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="17770" tag="operation_17770" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default void constructor&amp;#010;Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17771" tag="operation_17771" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief default destructor&amp;#010;Does nothing (class is abstract)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17772" tag="operation_17772" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="brief abstract generate function&amp;#010;This function must be extended by sublcasses to generate appropriate individuals.&amp;#010;\return a new Individual" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17777" tag="operation_17777" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="brief Creates a factory that creates Individual objects having specified length&amp;#010;\param length length of the individuals to generate&amp;#010;\sa Individual(unsigned int length)" />
         </header>
        </codeoperation>
        <codeoperation parent_id="17779" tag="operation_17779" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/ga&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17776" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17776" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17776" tag="hblock_tag_0" canDelete="false" classfield_id="17776" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17776" tag="hblock_tag_1" canDelete="false" classfield_id="17776" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="20400" parent_class="20400" fileExt=".cpp" fileName="gene" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;gene.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="20402" tag="hblock_tag_0" canDelete="false" classfield_id="20402" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20402" tag="hblock_tag_1" canDelete="false" classfield_id="20402" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20403" tag="hblock_tag_2" canDelete="false" classfield_id="20403" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20403" tag="hblock_tag_3" canDelete="false" classfield_id="20403" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20404" tag="hblock_tag_4" canDelete="false" classfield_id="20404" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20404" tag="hblock_tag_5" canDelete="false" classfield_id="20404" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20405" tag="hblock_tag_6" canDelete="false" classfield_id="20405" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20405" tag="hblock_tag_7" canDelete="false" classfield_id="20405" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20406" tag="hblock_tag_8" canDelete="false" classfield_id="20406" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20406" tag="hblock_tag_9" canDelete="false" classfield_id="20406" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="20408" tag="hblock_tag_10" canDelete="false" classfield_id="20408" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="20408" tag="hblock_tag_11" canDelete="false" classfield_id="20408" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="20409" tag="operation_20409" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20411" tag="operation_20411" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20412" tag="operation_20412" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20413" tag="operation_20413" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20414" tag="operation_20414" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20415" tag="operation_20415" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20416" tag="operation_20416" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20419" tag="operation_20419" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20422" tag="operation_20422" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20424" tag="operation_20424" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20425" tag="operation_20425" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="20426" tag="operation_20426" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="83511" tag="operation_83511" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="83785" tag="operation_83785" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="84152" tag="operation_84152" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="96302" tag="operation_96302" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="96385" tag="operation_96385" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gene.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:37&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="20402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20402" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20402" tag="hblock_tag_0" canDelete="false" classfield_id="20402" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20402" tag="hblock_tag_1" canDelete="false" classfield_id="20402" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20403" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20403" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20403" tag="hblock_tag_2" canDelete="false" classfield_id="20403" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20403" tag="hblock_tag_3" canDelete="false" classfield_id="20403" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20404" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20404" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20404" tag="hblock_tag_4" canDelete="false" classfield_id="20404" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20404" tag="hblock_tag_5" canDelete="false" classfield_id="20404" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20405" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20405" tag="hblock_tag_6" canDelete="false" classfield_id="20405" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20405" tag="hblock_tag_7" canDelete="false" classfield_id="20405" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20406" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20406" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20406" tag="hblock_tag_8" canDelete="false" classfield_id="20406" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20406" tag="hblock_tag_9" canDelete="false" classfield_id="20406" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20408" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20408" tag="hblock_tag_10" canDelete="false" classfield_id="20408" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20408" tag="hblock_tag_11" canDelete="false" classfield_id="20408" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="33676" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="33676" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="21688" parent_class="21688" fileExt=".cpp" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individualfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="22576" tag="hblock_tag_0" canDelete="false" classfield_id="22576" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="22576" tag="hblock_tag_1" canDelete="false" classfield_id="22576" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23143" tag="hblock_tag_2" canDelete="false" classfield_id="23143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23143" tag="hblock_tag_3" canDelete="false" classfield_id="23143" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="24711" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="24711" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="24711" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="24711" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="24711" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="23466" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="23466" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="23466" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="23466" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="23466" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="24084" tag="operation_24084" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="24136" tag="operation_24136" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="24240" tag="operation_24240" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26134" tag="operation_26134" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26454" tag="operation_26454" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26723" tag="operation_26723" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="26779" tag="operation_26779" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="98160" tag="operation_98160" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="82158" tag="operation_82158" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:14&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="22576" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22576" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22576" tag="hblock_tag_0" canDelete="false" classfield_id="22576" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22576" tag="hblock_tag_1" canDelete="false" classfield_id="22576" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23143" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23143" tag="hblock_tag_2" canDelete="false" classfield_id="23143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23143" tag="hblock_tag_3" canDelete="false" classfield_id="23143" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24711" field_type="1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24711" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24711" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24711" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24711" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24711" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24711" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23297" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23297" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23297" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23297" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23466" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23466" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23466" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23466" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23466" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23466" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23466" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="22266" parent_class="22266" fileExt=".cpp" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individual.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="29305" tag="hblock_tag_0" canDelete="false" classfield_id="29305" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29305" tag="hblock_tag_1" canDelete="false" classfield_id="29305" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29362" tag="hblock_tag_2" canDelete="false" classfield_id="29362" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29362" tag="hblock_tag_3" canDelete="false" classfield_id="29362" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="29419" tag="operation_29419" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29534" tag="operation_29534" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29766" tag="operation_29766" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29825" tag="operation_29825" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29943" tag="operation_29943" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30061" tag="operation_30061" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30120" tag="operation_30120" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30180" tag="operation_30180" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30300" tag="operation_30300" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="30423" tag="operation_30423" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="82696" tag="operation_82696" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="97301" tag="operation_97301" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="97386" tag="operation_97386" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="97557" tag="operation_97557" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:02:21&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29305" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29305" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29305" tag="hblock_tag_0" canDelete="false" classfield_id="29305" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29305" tag="hblock_tag_1" canDelete="false" classfield_id="29305" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29362" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29362" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29362" tag="hblock_tag_2" canDelete="false" classfield_id="29362" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29362" tag="hblock_tag_3" canDelete="false" classfield_id="29362" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="33676" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="33676" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="40065" parent_class="40065" fileExt=".cpp" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individualfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="40066" tag="hblock_tag_0" canDelete="false" classfield_id="40066" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="40066" tag="hblock_tag_1" canDelete="false" classfield_id="40066" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="40069" tag="operation_40069" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40070" tag="operation_40070" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40071" tag="operation_40071" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40074" tag="operation_40074" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40076" tag="operation_40076" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40079" tag="operation_40079" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="40080" tag="operation_40080" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="85158" tag="operation_85158" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="95571" tag="hblock_tag_4" canDelete="false" classfield_id="95571" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="95571" tag="hblock_tag_5" canDelete="false" classfield_id="95571" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="95652" tag="hblock_tag_6" canDelete="false" classfield_id="95652" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="95652" tag="hblock_tag_7" canDelete="false" classfield_id="95652" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="95813" tag="operation_95813" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="95895" tag="operation_95895" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:01&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="40066" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="40066" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="40066" tag="hblock_tag_0" canDelete="false" classfield_id="40066" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="40066" tag="hblock_tag_1" canDelete="false" classfield_id="40066" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95571" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95571" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95571" tag="hblock_tag_4" canDelete="false" classfield_id="95571" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95571" tag="hblock_tag_5" canDelete="false" classfield_id="95571" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95652" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95652" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95652" tag="hblock_tag_6" canDelete="false" classfield_id="95652" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95652" tag="hblock_tag_7" canDelete="false" classfield_id="95652" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="41727" parent_class="41727" fileExt=".cpp" fileName="gene" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;gene.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="41734" tag="operation_41734" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="41736" tag="operation_41736" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="86073" tag="operation_86073" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="86442" tag="operation_86442" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="86628" tag="operation_86628" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="93260" tag="hblock_tag_0" canDelete="false" classfield_id="93260" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="93260" tag="hblock_tag_27" canDelete="false" classfield_id="93260" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="93339" tag="hblock_tag_28" canDelete="false" classfield_id="93339" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="93339" tag="hblock_tag_29" canDelete="false" classfield_id="93339" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gene.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:55:52&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="44315" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44315" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="44315" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44315" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_21" canDelete="false" writeOutText="false" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="44446" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44446" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_22" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_23" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_24" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_25" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_26" canDelete="false" writeOutText="false" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93260" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93260" tag="hblock_tag_0" canDelete="false" classfield_id="93260" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93260" tag="hblock_tag_27" canDelete="false" classfield_id="93260" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93339" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93339" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93339" tag="hblock_tag_28" canDelete="false" classfield_id="93339" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93339" tag="hblock_tag_29" canDelete="false" classfield_id="93339" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="42704" parent_class="42704" fileExt=".cpp" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;individual.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="42713" tag="operation_42713" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42715" tag="operation_42715" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42717" tag="operation_42717" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42718" tag="operation_42718" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42719" tag="operation_42719" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42720" tag="operation_42720" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="42722" tag="operation_42722" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="85616" tag="operation_85616" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:49:05&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="44446" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44446" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="15724" parent_class="15724" fileExt=".cpp" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="52202" parent_class="52202" fileExt=".cpp" fileName="exception" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;exception.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exception.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="93340" parent_class="93340" fileExt=".cpp" fileName="genetype*" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genetype*.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genetype*.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:43:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="96801" parent_class="96801" fileExt=".cpp" fileName="varianttype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;varianttype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			varianttype.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:57:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="96885" parent_class="96885" fileExt=".cpp" fileName="data" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;data.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			data.cpp - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:57:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader89973" parent_class="89973" fileExt=".h" fileName="genetype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENETYPE_H&amp;#010;#define GENETYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="89973" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class GeneType&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="GeneType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENETYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genetype.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15296" parent_class="15296" fileExt=".h" fileName="stopcriterion" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STOPCRITERION_H&amp;#010;#define STOPCRITERION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;evolutionaryalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15296" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class StopCriterion&amp;#010;brief stop condition for an EvolutionaryAlgorithm&amp;#010;This class encapsulates a stop condition for an EvolutionaryAlgorithm. In particular, it may be extended to implement specific stop conditions.&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="StopCriterion ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15297" tag="operation_15297" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15299" tag="operation_15299" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15300" tag="operation_15300" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STOPCRITERION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stopcriterion.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15305" parent_class="15305" fileExt=".h" fileName="stopcriterionmaxiteration" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STOPCRITERIONMAXITERATION_H&amp;#010;#define STOPCRITERIONMAXITERATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;stopcriterion.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15305" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class StopCriterionMaxIteration&amp;#010;brief iteration count stop condition for an EvolutionaryAlgorithm&amp;#010;This class encapsulates an iteration count stop condition for an EvolutionaryAlgorithm. It stops when a fixed number of iterations has been performed.&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="StopCriterionMaxIteration ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15312" tag="operation_15312" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param maxIteration " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15314" tag="operation_15314" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15315" tag="operation_15315" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15310" tag="tblock_0" canDelete="false" indentLevel="1" text="  maxIteration;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15311" tag="tblock_1" canDelete="false" indentLevel="1" text="  iteration;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15310" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15310" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15310" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="15310" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15311" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15311" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15311" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15311" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STOPCRITERIONMAXITERATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stopcriterionmaxiteration.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15310" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15310" tag="tblock_0" canDelete="false" indentLevel="1" text="  maxIteration;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15310" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15310" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15310" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="15310" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15311" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15311" tag="tblock_1" canDelete="false" indentLevel="1" text="  iteration;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15311" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15311" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15311" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15311" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15322" parent_class="15322" fileExt=".h" fileName="selectionmethod" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SELECTIONMETHOD_H&amp;#010;#define SELECTIONMETHOD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;evolutionaryalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15322" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SelectionMethod&amp;#010;brief selects an Individual from a Population&amp;#010;This &lt;b>abstract&lt;/b> class encapsulates a policy to select individuals from a population. It should be extended to implement specific selection methods.&amp;#010;\sa Individual::fitness(), RankingSelection, RouletteWheel and TournamentSelection&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SelectionMethod ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15325" tag="operation_15325" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15326" tag="operation_15326" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15327" tag="operation_15327" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param population " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15329" tag="operation_15329" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15331" tag="operation_15331" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15324" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15324" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15324" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15324" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="15324" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SELECTIONMETHOD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			selectionmethod.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15324" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15324" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15324" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15324" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15324" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="15324" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15342" parent_class="15342" fileExt=".h" fileName="tournamentselection" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TOURNAMENTSELECTION_H&amp;#010;#define TOURNAMENTSELECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;selectionmethod.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15342" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TournamentSelection&amp;#010;brief selects an Individual from a Population using &lt;i>Tournament&lt;/i> policy&amp;#010;This class encapsulates the &amp;quot;Tournament&amp;quot; policy to select individuals from a population.&amp;#010;Tournament selection chooses &lt;i>size&lt;/i> individuals from the population, with uniform probability, and then selects the best among them.&amp;#010;\see Individual::fitness(), SelectionMethod, RankingSelection and TournamentSelection&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TournamentSelection ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15350" tag="operation_15350" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15352" tag="operation_15352" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15353" tag="operation_15353" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param population " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15355" tag="operation_15355" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15356" tag="operation_15356" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15346" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15348" tag="tblock_1" canDelete="false" indentLevel="1" text="  size;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15349" tag="tblock_2" canDelete="false" indentLevel="1" text=" Individual* best;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15346" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15346" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15346" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15346" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15348" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15348" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15348" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="15348" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15349" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="15349" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15349" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="15349" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TOURNAMENTSELECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			tournamentselection.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15346" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15346" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15346" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15346" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15346" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15346" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15348" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15348" tag="tblock_1" canDelete="false" indentLevel="1" text="  size;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15348" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15348" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15348" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="15348" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15349" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15349" tag="tblock_2" canDelete="false" indentLevel="1" text=" Individual* best;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15349" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="15349" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15349" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="15349" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15387" parent_class="15387" fileExt=".h" fileName="roulettewheel" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ROULETTEWHEEL_H&amp;#010;#define ROULETTEWHEEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;selectionmethod.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15387" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RouletteWheel&amp;#010;brief selects an Individual from a Population using &lt;i>Roulette Wheel&lt;/i> policy&amp;#010;This class encapsulates the &amp;quot;Roulette Wheel&amp;quot; policy to select individuals from a population.&amp;#010;Roulette Wheel selection is defined as follows: &amp;#010;each Individual &lt;i>i&lt;/i> in the Population can be selected with probability&amp;#010;\f[&amp;#010;P_i = \frac{f_i}{\sum\limits_{j=0}^{N-1}f_j}&amp;#010;\f]&amp;#010;where \f$f_j\f$ is the fitness of &lt;i>i&lt;/i>&amp;#010;\see Individual::fitness(), SelectionMethod, RankingSelection and TournamentSelection&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RouletteWheel ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15395" tag="operation_15395" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15396" tag="operation_15396" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15397" tag="operation_15397" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15399" tag="operation_15399" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15400" tag="operation_15400" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15391" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15393" tag="tblock_1" canDelete="false" indentLevel="1" text=" double* fitnessRipartition;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15394" tag="tblock_2" canDelete="false" indentLevel="1" text=" Individual* best;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15391" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15391" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15391" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15391" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15393" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15393" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15393" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="15393" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15394" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="15394" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15394" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="15394" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ROULETTEWHEEL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			roulettewheel.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15391" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15391" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15391" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15391" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15391" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15391" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15393" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15393" tag="tblock_1" canDelete="false" indentLevel="1" text=" double* fitnessRipartition;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15393" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15393" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15393" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="15393" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15394" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15394" tag="tblock_2" canDelete="false" indentLevel="1" text=" Individual* best;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15394" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="15394" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15394" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="15394" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15431" parent_class="15431" fileExt=".h" fileName="rankingselection" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RANKINGSELECTION_H&amp;#010;#define RANKINGSELECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;selectionmethod.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15431" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RankingSelection&amp;#010;brief Ranking Selection method&amp;#010;\sa Individual::fitness(), SelectionMethod, RouletteWheel and TournamentSelection&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RankingSelection ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15436" tag="operation_15436" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15437" tag="operation_15437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15438" tag="operation_15438" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param population " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15440" tag="operation_15440" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15441" tag="operation_15441" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="53736" tag="operation_53736" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param rank " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15435" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="53606" tag="tblock_1" canDelete="false" indentLevel="1" text=" double* ripartition;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="53671" tag="tblock_2" canDelete="false" indentLevel="1" text="  size;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15435" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15435" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15435" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15435" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="53606" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="53606" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="53606" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="53606" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="53671" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="53671" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="53671" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="53671" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RANKINGSELECTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rankingselection.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15435" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15435" tag="tblock_0" canDelete="false" indentLevel="1" text=" Population* population;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15435" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15435" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15435" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15435" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="53606" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="53606" tag="tblock_1" canDelete="false" indentLevel="1" text=" double* ripartition;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="53606" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="53606" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="53606" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="53606" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="53671" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="53671" tag="tblock_2" canDelete="false" indentLevel="1" text="  size;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="53671" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="53671" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="53671" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="53671" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15707" parent_class="15707" fileExt=".h" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUAL_H&amp;#010;#define INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;population.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15707" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Individual&amp;#010;brief Individual: generic %Individual.&amp;#010;Generic individual to be used with evolutionary algorithms. It is extended by ga::Individual and gp::Individual&amp;#010;to provide specific functions oriented towards Genetic Algorithms and Genetic Programming, respectively.&amp;#010;\sa IndividualFactory&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Individual ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15708" tag="operation_15708" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15709" tag="operation_15709" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15712" tag="operation_15712" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15713" tag="operation_15713" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15714" tag="operation_15714" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15715" tag="operation_15715" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15717" tag="operation_15717" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15722" tag="operation_15722" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15771" parent_class="15771" fileExt=".h" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUALFACTORY_H&amp;#010;#define INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;evolutionaryalgorithm.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15771" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IndividualFactory&amp;#010;brief IndividualFactory: generic Individual Factory.&amp;#010;This &lt;b>abstract&lt;/b> class is used to generate the individual to be used in a specific evolutionary algorithm.&amp;#010;When extending the Individual class, this class should be extended as well, to give EvolutionaryAlgorithm&amp;#010;to create individuals of the appropriate type.&amp;#010;\sa Individual&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IndividualFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15772" tag="operation_15772" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15773" tag="operation_15773" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15774" tag="operation_15774" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15791" parent_class="15791" fileExt=".h" fileName="population" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef POPULATION_H&amp;#010;#define POPULATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;evolutionaryalgorithm.h&quot;&amp;#010;#include &quot;individual.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15791" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Population&amp;#010;brief Population is a collection of Individual objects&amp;#010;The Population class represents a single generation of Individuals in a given stage of the execution of an EvolutionaryAlgorithm&amp;#010;\sa Individual&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Population ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15794" tag="operation_15794" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15796" tag="operation_15796" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15797" tag="operation_15797" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15798" tag="operation_15798" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15799" tag="operation_15799" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15792" tag="tblock_0" canDelete="false" indentLevel="1" text="  size;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15793" tag="tblock_1" canDelete="false" indentLevel="1" text=" Individual** individuals;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="array of Individua" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15792" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15792" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15792" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="15792" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15793" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15793" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of individuals&amp;#010;array of Individua&amp;#010;@return the value of individuals" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15793" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15793" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of individuals&amp;#010;array of Individua&amp;#010;@param value the value of individuals" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //POPULATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			population.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15792" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15792" tag="tblock_0" canDelete="false" indentLevel="1" text="  size;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15792" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15792" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15792" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="15792" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15793" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="array of Individua" />
       </header>
       <ccfdeclarationcodeblock parent_id="15793" tag="tblock_1" canDelete="false" indentLevel="1" text=" Individual** individuals;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="array of Individua" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15793" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="15793" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of individuals&amp;#010;array of Individua&amp;#010;@return the value of individuals" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15793" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="15793" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of individuals&amp;#010;array of Individua&amp;#010;@param value the value of individuals" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik" id="cppheader15890" parent_class="15890" fileExt=".h" fileName="evolutionaryalgorithm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EVOLUTIONARYALGORITHM_H&amp;#010;#define EVOLUTIONARYALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;selectionmethod.h&quot;&amp;#010;#include &quot;stopcriterion.h&quot;&amp;#010;#include &quot;individualfactory.h&quot;&amp;#010;#include &quot;population.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15890" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class EvolutionaryAlgorithm&amp;#010;brief EvolutionaryAlgorithm: The main evolutionary algorithm.&amp;#010;This class represents the main evolutionary algorithm.&amp;#010;\ingroup genetiK" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="EvolutionaryAlgorithm ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="15902" tag="operation_15902" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15910" tag="operation_15910" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15911" tag="operation_15911" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15912" tag="operation_15912" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15913" tag="operation_15913" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="15914" tag="operation_15914" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="15892" tag="tblock_0" canDelete="false" indentLevel="1" text=" StopCriterion* stopCriterion;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15893" tag="tblock_1" canDelete="false" indentLevel="1" text=" Population* population;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15895" tag="tblock_2" canDelete="false" indentLevel="1" text=" IndividualFactory* individualFactory;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15897" tag="tblock_3" canDelete="false" indentLevel="1" text=" SelectionMethod* selectionMethod;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15898" tag="tblock_4" canDelete="false" indentLevel="1" text="  populationSize;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15899" tag="tblock_5" canDelete="false" indentLevel="1" text=" double crossOverProbabilty;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15900" tag="tblock_6" canDelete="false" indentLevel="1" text=" double mutationProbabilty;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="15901" tag="tblock_7" canDelete="false" indentLevel="1" text=" bool elitism;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="15892" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15892" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15892" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="15892" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15893" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="15893" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15893" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="15893" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15895" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="15895" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15895" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="15895" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15897" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="15897" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15897" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="15897" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15898" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="15898" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15898" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="15898" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15899" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="15899" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15899" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="15899" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15900" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="15900" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15900" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="15900" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="15901" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="15901" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="15901" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="15901" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EVOLUTIONARYALGORITHM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			evolutionaryalgorithm.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="15892" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15892" tag="tblock_0" canDelete="false" indentLevel="1" text=" StopCriterion* stopCriterion;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15892" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="15892" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15892" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="15892" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15893" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15893" tag="tblock_1" canDelete="false" indentLevel="1" text=" Population* population;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15893" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="15893" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15893" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="15893" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15895" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15895" tag="tblock_2" canDelete="false" indentLevel="1" text=" IndividualFactory* individualFactory;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15895" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="15895" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15895" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="15895" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15897" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15897" tag="tblock_3" canDelete="false" indentLevel="1" text=" SelectionMethod* selectionMethod;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15897" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="15897" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15897" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="15897" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15898" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15898" tag="tblock_4" canDelete="false" indentLevel="1" text="  populationSize;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15898" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="15898" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15898" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="15898" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15899" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15899" tag="tblock_5" canDelete="false" indentLevel="1" text=" double crossOverProbabilty;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15899" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="15899" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15899" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="15899" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15900" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15900" tag="tblock_6" canDelete="false" indentLevel="1" text=" double mutationProbabilty;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15900" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="15900" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15900" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="15900" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="15901" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="15901" tag="tblock_7" canDelete="false" indentLevel="1" text=" bool elitism;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="15901" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="15901" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="15901" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="15901" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader16640" parent_class="16640" fileExt=".h" fileName="variant" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VARIANT_H&amp;#010;#define VARIANT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;varianttype.h&quot;&amp;#010;#include &quot;data.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16640" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Variant&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Variant ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16646" tag="operation_16646" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16647" tag="operation_16647" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param boolean " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16649" tag="operation_16649" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param integer " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16651" tag="operation_16651" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param character " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16653" tag="operation_16653" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param real " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16655" tag="operation_16655" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param userData " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16658" tag="operation_16658" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16659" tag="operation_16659" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16660" tag="operation_16660" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16661" tag="operation_16661" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16662" tag="operation_16662" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16663" tag="operation_16663" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16664" tag="operation_16664" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16665" tag="operation_16665" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param boolean " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16667" tag="operation_16667" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param integer " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16669" tag="operation_16669" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param character " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16671" tag="operation_16671" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param real " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16673" tag="operation_16673" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param userData " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16645" tag="tblock_1" canDelete="false" indentLevel="1" text=" VariantType type;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="16644" tag="tblock_0" canDelete="false" indentLevel="1" text=" Data data;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16645" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16645" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16645" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16645" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="16644" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16644" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16644" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="16644" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VARIANT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			variant.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:58:58&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16644" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16644" tag="tblock_0" canDelete="false" indentLevel="1" text=" Data data;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16644" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16644" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16644" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="16644" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="16645" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16645" tag="tblock_1" canDelete="false" indentLevel="1" text=" VariantType type;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16645" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="16645" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16645" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="16645" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader16733" parent_class="16733" fileExt=".h" fileName="random" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RANDOM_H&amp;#010;#define RANDOM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="16733" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Random&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Random ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16738" tag="operation_16738" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16740" tag="operation_16740" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16741" tag="operation_16741" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16742" tag="operation_16742" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16743" tag="operation_16743" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16744" tag="operation_16744" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="16746" tag="operation_16746" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16734" tag="operation_16734" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="16737" tag="tblock_0" canDelete="false" indentLevel="1" text="static  Random* implementation;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16737" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16737" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="16735" tag="operation_16735" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RANDOM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			random.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:50&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="16737" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="16737" tag="tblock_0" canDelete="false" indentLevel="1" text="static  Random* implementation;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="16737" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="16737" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="16737" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="16737" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader52201" parent_class="52201" fileExt=".h" fileName="exception" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EXCEPTION_H&amp;#010;#define EXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.util::Exception;&amp;#010;using genetiK.util::Exception;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="52201" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Exception&amp;#010;brief Exception is the base class of all exceptions thrown by classes in the GenetiK library&amp;#010;@ingroup util" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Exception ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="52207" tag="operation_52207" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="52210" tag="operation_52210" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="52211" tag="operation_52211" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="52213" tag="operation_52213" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="52206" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string message;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="52206" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="52206" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="52206" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="52206" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exception.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="52206" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="52206" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string message;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="52206" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="52206" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="52206" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="52206" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader52383" parent_class="52383" fileExt=".h" fileName="illegalstateexception" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ILLEGALSTATEEXCEPTION_H&amp;#010;#define ILLEGALSTATEEXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;exception.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="52383" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IllegalStateException&amp;#010;brief Signals that an objects is in an illegal state&amp;#010;This class is used thrown to signal that an object is in an unexpected state.&amp;#010;For example, it is thrown by classes that require specific prior initialization before calling certain methods.&amp;#010;@ingroup util" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IllegalStateException ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="52387" tag="operation_52387" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="52389" tag="operation_52389" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ILLEGALSTATEEXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			illegalstateexception.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader55347" parent_class="55347" fileExt=".h" fileName="randomdefault" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RANDOMDEFAULT_H&amp;#010;#define RANDOMDEFAULT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;random.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="55347" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RandomDefault&amp;#010; Random Number generator 'Mersenne Twister'                                *&amp;#010;                                                                           *&amp;#010; This random number generator is described in the article by               *&amp;#010; M. Matsumoto &amp; T. Nishimura, in:                                          *&amp;#010; ACM Transactions on Modeling and Computer Simulation,                     *&amp;#010; vol. 8, no. 1, 1998, pp. 3-30.                                            *&amp;#010; Details on the initialization scheme can be found at                      *&amp;#010; http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html                  *&amp;#010;                                                                           *&amp;#010; Experts consider this an excellent random number generator.               *//*!&amp;#010;@brief This class is the default random implementation with the 'Mersenne Twister' algorithm.&amp;#010;&amp;#010; Random Number generator 'Mersenne Twister'                                *&amp;#010;                                                                           *&amp;#010; This random number generator is described in the article by               *&amp;#010; M. Matsumoto &amp; T. Nishimura, in:                                          *&amp;#010; ACM Transactions on Modeling and Computer Simulation,                     *&amp;#010; vol. 8, no. 1, 1998, pp. 3-30.                                            *&amp;#010; Details on the initialization scheme can be found at                      *&amp;#010; http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html                  *&amp;#010;                                                                           *&amp;#010; Experts consider this an excellent random number generator.               *&amp;#010;@ingroup util" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RandomDefault ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="55367" tag="operation_55367" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param seed " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55369" tag="operation_55369" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55370" tag="operation_55370" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55371" tag="operation_55371" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55373" tag="operation_55373" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="55352" tag="tblock_0" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_N;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="// constants for MT19937:" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55353" tag="tblock_1" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_M;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55354" tag="tblock_2" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_R;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55355" tag="tblock_3" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_U;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55356" tag="tblock_4" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_S;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55357" tag="tblock_5" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_T;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55358" tag="tblock_6" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_L;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55359" tag="tblock_7" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_A;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55360" tag="tblock_8" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_B;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55361" tag="tblock_9" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_C;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55362" tag="tblock_10" canDelete="false" indentLevel="1" text="  stateVector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55364" tag="tblock_11" canDelete="false" indentLevel="1" text="  stateVectorIndex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55366" tag="tblock_12" canDelete="false" indentLevel="1" text="  seed;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="55352" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="55352" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@return the value of MERS_N" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55352" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="55352" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@param value the value of MERS_N" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55353" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="55353" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55353" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="55353" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55354" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="55354" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55354" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="55354" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55355" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="55355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55355" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="55355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55356" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="55356" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55356" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="55356" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55357" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="55357" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55357" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="55357" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55358" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="55358" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55358" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="55358" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55359" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="55359" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55359" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="55359" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55360" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="55360" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55360" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="55360" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55361" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="55361" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55361" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="55361" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="55362" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="55362" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55362" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="55362" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55364" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="55364" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55364" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="55364" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55366" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="55366" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55366" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="55366" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RANDOMDEFAULT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			randomdefault.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55352" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="// constants for MT19937:" />
       </header>
       <ccfdeclarationcodeblock parent_id="55352" tag="tblock_0" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_N;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="// constants for MT19937:" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55352" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="55352" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@return the value of MERS_N" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55352" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="55352" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of MERS_N&amp;#010;// constants for MT19937:&amp;#010;@param value the value of MERS_N" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55353" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55353" tag="tblock_1" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_M;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55353" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="55353" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55353" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="55353" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55354" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55354" tag="tblock_2" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_R;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55354" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="55354" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55354" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="55354" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55355" tag="tblock_3" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_U;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55355" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="55355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55355" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="55355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55356" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55356" tag="tblock_4" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_S;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55356" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="55356" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55356" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="55356" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55357" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55357" tag="tblock_5" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_T;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55357" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="55357" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55357" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="55357" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55358" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55358" tag="tblock_6" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_L;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55358" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="55358" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55358" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="55358" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55359" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55359" tag="tblock_7" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_A;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55359" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="55359" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55359" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="55359" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55360" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55360" tag="tblock_8" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_B;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55360" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="55360" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55360" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="55360" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55361" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55361" tag="tblock_9" canDelete="false" indentLevel="1" text="static  const unsigned int MERS_C;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55361" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="55361" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55361" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="55361" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55362" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55362" tag="tblock_10" canDelete="false" indentLevel="1" text="  stateVector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55362" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="55362" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55362" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="55362" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55364" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55364" tag="tblock_11" canDelete="false" indentLevel="1" text="  stateVectorIndex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55364" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="55364" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55364" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="55364" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55366" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55366" tag="tblock_12" canDelete="false" indentLevel="1" text="  seed;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55366" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="55366" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55366" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="55366" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader55334" parent_class="55334" fileExt=".h" fileName="random" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RANDOM_H&amp;#010;#define RANDOM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="55334" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Random&amp;#010;@brief This class represents both the interface and the container of the Random implementation used in the genetiK library .&amp;#010;&amp;#010;This class represents both the interface and the container of the Random implementation used in the genetiK library.&amp;#010;You can redefine your own Random, extending this class and passing it to the setImplementation method.&amp;#010;@ingroup util" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Random ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="55338" tag="operation_55338" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55340" tag="operation_55340" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55341" tag="operation_55341" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55342" tag="operation_55342" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55343" tag="operation_55343" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55344" tag="operation_55344" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55346" tag="operation_55346" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="55335" tag="operation_55335" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55336" tag="operation_55336" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="55337" tag="tblock_0" canDelete="false" indentLevel="1" text="static  Random* implementation;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="55337" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="55337" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55337" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="55337" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RANDOM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			random.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55337" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55337" tag="tblock_0" canDelete="false" indentLevel="1" text="static  Random* implementation;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55337" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="55337" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55337" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="55337" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.util" id="cppheader55287" parent_class="55287" fileExt=".h" fileName="log" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LOG_H&amp;#010;#define LOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="55287" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Log&amp;#010;brief Provided basic logging functionalities.&amp;#010;This class is a sort of lightweight standalone logger. It can be used to selectively log all messages having priority greater or equal than a specified level (see ELogLevel for more details) to a specific target (file or output stream).&amp;#010;Default behaviour is to log messages having priority &amp;gt;= than genetiK::util::WARN to standard output.&amp;#010;The Log class also exposes a set of is{ELogLevel}Enabled() methods, to check if a particular log level is enabled. These methods are useful to avoid the overhead needed to generate the actual log messages when the appropriate log level is disabled.&amp;#010;@see ELogLevel&amp;#010;@ingroup util" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="78503" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ELogLevel ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Log ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="78503" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="78503" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="78503" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="78503" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="78503" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="55302" tag="operation_55302" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55303" tag="operation_55303" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55304" tag="operation_55304" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param level " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55306" tag="operation_55306" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55307" tag="operation_55307" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55309" tag="operation_55309" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55312" tag="operation_55312" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55313" tag="operation_55313" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55317" tag="operation_55317" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55319" tag="operation_55319" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55321" tag="operation_55321" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55323" tag="operation_55323" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55325" tag="operation_55325" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55327" tag="operation_55327" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55328" tag="operation_55328" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55329" tag="operation_55329" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55330" tag="operation_55330" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55331" tag="operation_55331" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55332" tag="operation_55332" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param level " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="55297" tag="tblock_1" canDelete="false" indentLevel="1" text="static  Log* self;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55298" tag="tblock_2" canDelete="false" indentLevel="1" text="  threshold;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="55301" tag="tblock_3" canDelete="false" indentLevel="1" text=" ostream* target;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="55297" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="55297" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55297" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="55297" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="55298" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="55298" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55298" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="55298" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="55301" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="55301" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="55301" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="55301" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="55288" tag="operation_55288" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55289" tag="operation_55289" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55292" tag="operation_55292" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param  " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="55295" tag="operation_55295" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LOG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			log.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/util&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="55297" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55297" tag="tblock_1" canDelete="false" indentLevel="1" text="static  Log* self;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55297" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="55297" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55297" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="55297" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55298" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55298" tag="tblock_2" canDelete="false" indentLevel="1" text="  threshold;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55298" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="55298" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55298" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="55298" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="55301" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="55301" tag="tblock_3" canDelete="false" indentLevel="1" text=" ostream* target;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="55301" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="55301" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="55301" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="55301" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="78503" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="78503" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ELogLevel ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="78503" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="78503" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="78503" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="78503" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="78503" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="78503" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.ga" id="cppheader17051" parent_class="17051" fileExt=".h" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUAL_H&amp;#010;#define INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individual.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.ga::Individual;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="17051" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Individual&amp;#010;brief Individual: GA-specific %Individual.&amp;#010;			  This class extends the generic genetiK::Individual. It represents an individual as a&amp;#010;			  string of bits.&amp;#010;			  \ingroup ga" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Individual ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17052" tag="operation_17052" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17053" tag="operation_17053" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17055" tag="operation_17055" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17056" tag="operation_17056" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17057" tag="operation_17057" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17058" tag="operation_17058" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17060" tag="operation_17060" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17064" tag="operation_17064" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17074" tag="operation_17074" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17089" tag="operation_17089" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17090" tag="operation_17090" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="17069" tag="tblock_0" canDelete="false" indentLevel="1" text="  length;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17071" tag="tblock_1" canDelete="false" indentLevel="1" text=" unsigned int* bitArray;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="17073" tag="tblock_2" canDelete="false" indentLevel="1" text="  blockNum;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="17069" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17069" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17069" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17069" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17071" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17071" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17071" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="17071" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="17073" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17073" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17073" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17073" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/ga&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17069" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17069" tag="tblock_0" canDelete="false" indentLevel="1" text="  length;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17069" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17069" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17069" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="17069" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17071" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17071" tag="tblock_1" canDelete="false" indentLevel="1" text=" unsigned int* bitArray;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17071" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="17071" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17071" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="17071" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="17073" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17073" tag="tblock_2" canDelete="false" indentLevel="1" text="  blockNum;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17073" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="17073" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17073" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="17073" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.ga" id="cppheader15888" parent_class="15888" fileExt=".h" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUALFACTORY_H&amp;#010;#define INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individualfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.ga::IndividualFactory;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15888" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IndividualFactory&amp;#010;brief IndividualFactory: GA-specific Individual Factory.&amp;#010;This class extends the generic genetiK::IndividualFactory to generate individuals to&amp;#010;be used with Genetic Algorithms.&amp;#010;\ingroup ga&amp;#010;@{" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IndividualFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="17770" tag="operation_17770" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17771" tag="operation_17771" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17772" tag="operation_17772" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17777" tag="operation_17777" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="17779" tag="operation_17779" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="17776" tag="tblock_0" canDelete="false" indentLevel="1" text="  length;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="17776" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17776" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="17776" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17776" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is genetik/ga&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="17776" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="17776" tag="tblock_0" canDelete="false" indentLevel="1" text="  length;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="17776" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="17776" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="17776" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="17776" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="cppheader20400" parent_class="20400" fileExt=".h" fileName="gene" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENE_H&amp;#010;#define GENE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individual.h&quot;&amp;#010;#include &quot;variant.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="20400" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Gene&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="33676" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Individual ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Gene ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="20409" tag="operation_20409" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param arity " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20411" tag="operation_20411" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20412" tag="operation_20412" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20413" tag="operation_20413" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20414" tag="operation_20414" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20415" tag="operation_20415" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20416" tag="operation_20416" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param label " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20419" tag="operation_20419" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param label &amp;#010;@param newSubTree " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20422" tag="operation_20422" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param label " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20424" tag="operation_20424" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20425" tag="operation_20425" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="20426" tag="operation_20426" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="83511" tag="operation_83511" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param i " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="83785" tag="operation_83785" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param i &amp;#010;@param newArgument " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="84152" tag="operation_84152" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param height " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="96302" tag="operation_96302" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="96385" tag="operation_96385" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="20402" tag="tblock_1" canDelete="false" indentLevel="1" text=" unsigned int cardinality;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="20403" tag="tblock_2" canDelete="false" indentLevel="1" text=" unsigned char height;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="20404" tag="tblock_3" canDelete="false" indentLevel="1" text=" unsigned char branchDepth;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="20405" tag="tblock_4" canDelete="false" indentLevel="1" text=" unsigned int label;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="20406" tag="tblock_5" canDelete="false" indentLevel="1" text=" unsigned char arity;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="20408" tag="tblock_6" canDelete="false" indentLevel="1" text=" Gene** argument;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="20402" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="20402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20402" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="20402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="20403" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="20403" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20403" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="20403" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="20404" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="20404" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20404" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="20404" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="20405" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="20405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20405" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="20405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="20406" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="20406" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20406" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="20406" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="20408" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="20408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="20408" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="20408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gene.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:37&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="20402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20402" tag="tblock_1" canDelete="false" indentLevel="1" text=" unsigned int cardinality;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20402" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="20402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20402" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="20402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20403" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20403" tag="tblock_2" canDelete="false" indentLevel="1" text=" unsigned char height;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20403" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="20403" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20403" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="20403" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20404" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20404" tag="tblock_3" canDelete="false" indentLevel="1" text=" unsigned char branchDepth;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20404" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="20404" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20404" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="20404" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20405" tag="tblock_4" canDelete="false" indentLevel="1" text=" unsigned int label;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20405" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="20405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20405" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="20405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20406" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20406" tag="tblock_5" canDelete="false" indentLevel="1" text=" unsigned char arity;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20406" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="20406" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20406" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="20406" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="20408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="20408" tag="tblock_6" canDelete="false" indentLevel="1" text=" Gene** argument;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="20408" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="20408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="20408" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="20408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="33676" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="33676" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Individual ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="cppheader21688" parent_class="21688" fileExt=".h" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUALFACTORY_H&amp;#010;#define INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individualfactory.h&quot;&amp;#010;#include &quot;etreeinitialization.h&quot;&amp;#010;#include &quot;egenerategeneflags.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.gp::IndividualFactory;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="21688" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IndividualFactory&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="24711" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ETreeInitialization ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="23297" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" IndividualFactory ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="23297" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" IndividualFactory ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IndividualFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="24711" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="24711" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="24711" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="24711" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="24711" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="24084" tag="operation_24084" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="24136" tag="operation_24136" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="24240" tag="operation_24240" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param maxHeight &amp;#010;@param treeInitialization " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="26134" tag="operation_26134" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param flags " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="26454" tag="operation_26454" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param height &amp;#010;@param treeInitialization " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="26723" tag="operation_26723" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="26779" tag="operation_26779" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="98160" tag="operation_98160" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="23466" tag="tblock_5" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ETreeInitialization ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="23466" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="23466" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="23466" tag="hblock_tag_26" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="23466" tag="hblock_tag_27" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="23466" tag="hblock_tag_28" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="82158" tag="operation_82158" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param branchRoot &amp;#010;@param height " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="22576" tag="tblock_3" canDelete="false" indentLevel="1" text=" unsigned char maxHeight;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="23143" tag="tblock_4" canDelete="false" indentLevel="1" text=" genetiK.gp.ETreeInitialization treeInitialization;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="22576" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="22576" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="22576" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="22576" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="23143" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="23143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="23143" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="23143" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:14&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="22576" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="22576" tag="tblock_3" canDelete="false" indentLevel="1" text=" unsigned char maxHeight;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="22576" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="22576" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="22576" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="22576" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23143" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23143" tag="tblock_4" canDelete="false" indentLevel="1" text=" genetiK.gp.ETreeInitialization treeInitialization;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23143" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="23143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23143" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="23143" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="24711" field_type="1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24711" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ETreeInitialization ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24711" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24711" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24711" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24711" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24711" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24711" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23297" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23297" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" IndividualFactory ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23297" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23297" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" IndividualFactory ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23297" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23297" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23297" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23297" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23297" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23297" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="23466" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="23466" tag="tblock_5" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ETreeInitialization ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="23466" tag="hblock_tag_24" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="23466" tag="hblock_tag_25" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="23466" tag="hblock_tag_26" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="23466" tag="hblock_tag_27" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="23466" tag="hblock_tag_28" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="23466" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp" id="cppheader22266" parent_class="22266" fileExt=".h" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUAL_H&amp;#010;#define INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individual.h&quot;&amp;#010;#include &quot;gene.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.gp::Individual;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="22266" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Individual&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="33676" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Individual ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29825" tag="operation_29825" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param individualFactory " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29943" tag="operation_29943" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param individual " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30061" tag="operation_30061" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30120" tag="operation_30120" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30180" tag="operation_30180" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30300" tag="operation_30300" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param mutationProbability " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="30423" tag="operation_30423" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param i &amp;#010;@param child1 &amp;#010;@param child2 " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="82696" tag="operation_82696" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29419" tag="operation_29419" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param label " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29534" tag="operation_29534" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param label &amp;#010;@param newSubTree " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29766" tag="operation_29766" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="97301" tag="operation_97301" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="97386" tag="operation_97386" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="97557" tag="operation_97557" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="29305" tag="tblock_1" canDelete="false" indentLevel="1" text=" IndividualFactory* individualFactory;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29362" tag="tblock_2" canDelete="false" indentLevel="1" text=" Gene* root;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29305" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="29305" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29305" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="29305" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29362" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="29362" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29362" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="29362" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:02:21&amp;#010;The original location of this file is genetik/gp&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29305" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29305" tag="tblock_1" canDelete="false" indentLevel="1" text=" IndividualFactory* individualFactory;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29305" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="29305" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29305" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="29305" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29362" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29362" tag="tblock_2" canDelete="false" indentLevel="1" text=" Gene* root;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29362" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="29362" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29362" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="29362" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="33676" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="33676" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="33676" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="33676" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="33676" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="33676" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="33676" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="33676" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="cppheader40065" parent_class="40065" fileExt=".h" fileName="individualfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUALFACTORY_H&amp;#010;#define INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individualfactory.h&quot;&amp;#010;#include &quot;etreeinitialization.h&quot;&amp;#010;#include &quot;egenerategeneflags.h&quot;&amp;#010;#include &quot;genetype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.gp.st::IndividualFactory;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="40065" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IndividualFactory&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IndividualFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="40069" tag="operation_40069" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40070" tag="operation_40070" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40071" tag="operation_40071" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param maxHeight &amp;#010;@param treeInitialization " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40074" tag="operation_40074" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param flags " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40076" tag="operation_40076" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param height &amp;#010;@param treeInitialization " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40079" tag="operation_40079" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="40080" tag="operation_40080" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="85158" tag="operation_85158" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param branchRoot &amp;#010;@param height " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="95813" tag="operation_95813" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="95895" tag="operation_95895" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param type " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="95571" tag="tblock_5" canDelete="false" indentLevel="1" text=" GeneType rootType;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="95652" tag="tblock_8" canDelete="false" indentLevel="1" text=" GeneType nextGeneType;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="40066" tag="tblock_0" canDelete="false" indentLevel="1" text=" unsigned char maxHeight;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="95571" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="95571" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="95571" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="95571" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="95652" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="95652" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="95652" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="95652" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="40066" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="40066" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="40066" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="40066" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUALFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individualfactory.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 19:06:01&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="40066" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="40066" tag="tblock_0" canDelete="false" indentLevel="1" text=" unsigned char maxHeight;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="40066" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="40066" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="40066" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="40066" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95571" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95571" tag="tblock_5" canDelete="false" indentLevel="1" text=" GeneType rootType;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95571" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="95571" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95571" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="95571" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="95652" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="95652" tag="tblock_8" canDelete="false" indentLevel="1" text=" GeneType nextGeneType;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="95652" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="95652" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="95652" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="95652" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="cppheader41727" parent_class="41727" fileExt=".h" fileName="gene" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENE_H&amp;#010;#define GENE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;gene.h&quot;&amp;#010;#include &quot;individual.h&quot;&amp;#010;#include &quot;genetype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.gp.st::Gene;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="41727" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Gene&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="44315" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="44315" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Gene ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="44446" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Individual ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Gene ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_20" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="41734" tag="operation_41734" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param arity &amp;#010;@param ... " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="41736" tag="operation_41736" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="86073" tag="operation_86073" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param geneType " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="86442" tag="operation_86442" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param i " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="86628" tag="operation_86628" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="93260" tag="tblock_35" canDelete="false" indentLevel="1" text=" GeneType type;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="93339" tag="tblock_38" canDelete="false" indentLevel="1" text=" GeneType* argumentType;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="93260" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="93260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="93260" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="93260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="93339" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="93339" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="93339" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="93339" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gene.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:55:52&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="44315" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44315" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="44315" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44315" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Gene ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44315" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44315" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44315" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44315" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44315" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44315" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="44446" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44446" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Individual ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_20" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_21" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_22" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93260" tag="tblock_35" canDelete="false" indentLevel="1" text=" GeneType type;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93260" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="93260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93260" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="93260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="93339" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="93339" tag="tblock_38" canDelete="false" indentLevel="1" text=" GeneType* argumentType;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="93339" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="93339" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="93339" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="93339" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="genetik.gp.st" id="cppheader42704" parent_class="42704" fileExt=".h" fileName="individual" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INDIVIDUAL_H&amp;#010;#define INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;individual.h&quot;&amp;#010;#include &quot;gene.h&quot;&amp;#010;#include &quot;genetype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using genetiK.gp.st::Individual;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="42704" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Individual&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="44446" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Individual ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="42713" tag="operation_42713" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param individualFactory " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42715" tag="operation_42715" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param individual " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42717" tag="operation_42717" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42718" tag="operation_42718" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42719" tag="operation_42719" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42720" tag="operation_42720" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param mutationProbability " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="42722" tag="operation_42722" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param i &amp;#010;@param child1 &amp;#010;@param child2 " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="85616" tag="operation_85616" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param geneType " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INDIVIDUAL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			individual.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:49:05&amp;#010;The original location of this file is genetik/gp/st&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="44446" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="44446" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Gene ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="44446" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="44446" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="44446" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="44446" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="44446" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="44446" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader15724" parent_class="15724" fileExt=".h" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="15724" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader52202" parent_class="52202" fileExt=".h" fileName="exception" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EXCEPTION_H&amp;#010;#define EXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="52202" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class exception&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="exception ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exception.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:26:51&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader93340" parent_class="93340" fileExt=".h" fileName="genetype*" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENETYPE*_H&amp;#010;#define GENETYPE*_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="93340" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class GeneType*&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="GeneType* ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENETYPE*_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genetype*.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:43:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader96801" parent_class="96801" fileExt=".h" fileName="varianttype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VARIANTTYPE_H&amp;#010;#define VARIANTTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="96801" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class VariantType&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="VariantType ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VARIANTTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			varianttype.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:57:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader96885" parent_class="96885" fileExt=".h" fileName="data" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DATA_H&amp;#010;#define DATA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="96885" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Data&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Data ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DATA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			data.h - Copyright casta&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Fri Feb 10 2006 at 18:57:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
